{"version":3,"sources":["webpack://deriv-com/./src/pages/markets/components/sections/_other-markets.js"],"names":["markets_type","forex","icon","src","Forex","alt","width","height","title","translate_text","content","to","id","Synthetic_Indices","SyntheticIndices","stock_indices","StockIndices","commodities","Commodities","LearnMore","styled","LocalizedLink","props","visibility","Text","device","MobileCardWrapper","Flex","Section","SectionContainer","StyledFlex","Card","name","React","button_visibility","setButtonVisibility","Icon","direction","max_width","p","jc","position","onMouseEnter","onMouseLeave","dynamic_id","weight","mt","localize","mr","Arrow","MobileCard","m","mb","ai","size","MarketsWrapper","Wrapper","Box","CardWrapper","StyledHeader","Header","MobileCardContainer","except","markets","tablet_jc","as","type","align","map","market","key"],"mappings":"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","file":"3475-3ef1d294aeb124a01bf1.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Flex, SectionContainer, Show } from 'components/containers'\nimport Box from 'components/containers/box'\nimport { Header, Text } from 'components/elements'\nimport { localize, Localize, LocalizedLink } from 'components/localization'\n//TODO: using temp svg as a function for having dynamic id\nimport Arrow from 'images/svg/arrow-right.svg'\nimport Commodities from 'images/svg/markets/commodities.svg'\nimport Forex from 'images/svg/markets/forex.svg'\nimport StockIndices from 'images/svg/markets/stock.svg'\nimport SyntheticIndices from 'images/svg/markets/synthetic.svg'\nimport device from 'themes/device'\n\nconst markets_type = {\n    forex: {\n        // eslint-disable-next-line react/display-name\n        icon: () => <img src={Forex} alt=\"forex\" width=\"64\" height=\"64\" />,\n        title: <Localize translate_text=\"Forex\" />,\n        content: (\n            <Localize translate_text=\"Forex trading gives you the chance to profit from changes in the relative values of currencies on the forex market.\" />\n        ),\n        to: '/markets#forex',\n        id: 'marketforexothermarkets',\n    },\n    Synthetic_Indices: {\n        // eslint-disable-next-line react/display-name\n        icon: () => <img src={SyntheticIndices} alt=\"synthetic\" width=\"64\" height=\"64\" />,\n        title: <Localize translate_text=\"Synthetic indices\" />,\n        content: (\n            <Localize translate_text=\"Synthetic indices are our proprietary indices that simulate real-world market movements while being free of market and liquidity risks.\" />\n        ),\n        to: '/markets#synthetic',\n        id: 'marketsyntheticothermarkets',\n    },\n    stock_indices: {\n        // eslint-disable-next-line react/display-name\n        icon: () => <img src={StockIndices} alt=\"stock\" width=\"64\" height=\"64\" />,\n        title: <Localize translate_text=\"Stock indices\" />,\n        content: (\n            <Localize translate_text=\"Stock indices trading allows you to profit from the price movements in a market without buying the underlying assets.\" />\n        ),\n        to: '/markets#stock',\n        id: 'marketstockothermarkets',\n    },\n\n    commodities: {\n        // eslint-disable-next-line react/display-name\n        icon: () => <img src={Commodities} alt=\"commodities\" width=\"64\" height=\"64\" />,\n        title: <Localize translate_text=\"Commodities\" />,\n        content: (\n            <Localize translate_text=\"Commodities trading on Deriv lets you profit from correctly predicting the market movement on precious metals and crude oil.\" />\n        ),\n        to: '/markets#commodities',\n        id: 'marketcommoditiesothermarket',\n    },\n}\nconst LearnMore = styled(LocalizedLink)`\n    opacity: ${(props) => (props.visibility === 'true' ? '1' : '0')};\n    width: 142px;\n    height: 40px;\n    border-radius: 23px;\n    background-color: #f4f4f6;\n    position: absolute;\n    bottom: -20px;\n    margin-left: auto;\n    margin-right: auto;\n    left: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    transition: opacity 0.1s linear;\n\n    ${Text} {\n        font-weight: bold;\n        color: var(--color-red);\n    }\n\n    @media ${device.tabletL} {\n        ${Text} {\n            font-size: var(--text-size-sm);\n            margin-right: 1rem;\n        }\n    }\n`\nconst MobileCardWrapper = styled(Flex)`\n    box-shadow: 0 4px 8px 0 rgba(14, 14, 14, 0.1);\n    min-height: 32.5rem;\n    position: relative;\n    width: 100%;\n    max-width: 35.25rem;\n    height: 100%;\n    padding: 3rem;\n    align-items: center;\n    flex-direction: column;\n\n    img {\n        width: 48px;\n        height: 48px;\n    }\n    ${LearnMore} {\n        img {\n            width: 16px;\n            height: 16px;\n        }\n    }\n`\nconst Section = styled(SectionContainer)`\n    padding: 8rem 0 12rem 12rem;\n\n    @media ${device.laptopM} {\n        padding: 8rem 0 8.8rem 0;\n    }\n    @media ${device.tabletL} {\n        padding: 5rem 0;\n    }\n`\nconst StyledFlex = styled(Flex)`\n    height: auto;\n    border-radius: 1.6rem;\n    box-shadow: 0 4px 8px 0 rgba(14, 14, 14, 0.1);\n    background-color: var(--color-white);\n    top: 0;\n    min-height: 29.6rem;\n\n    ${LearnMore} {\n        img {\n            transform: rotate(0);\n            width: 16px;\n            height: 16px;\n        }\n    }\n`\nconst Card = ({ name }) => {\n    const [button_visibility, setButtonVisibility] = React.useState('false')\n    const Icon = markets_type[name].icon\n\n    return (\n        <StyledFlex\n            direction=\"column\"\n            max_width=\"28.2rem\"\n            width=\"100%\"\n            p=\"2.4rem 2.4rem 4rem\"\n            jc=\"flex-start\"\n            position=\"relative\"\n            onMouseEnter={() => setButtonVisibility('true')}\n            onMouseLeave={() => setButtonVisibility('false')}\n        >\n            <div>\n                <Icon dynamic_id={markets_type[name].id} width=\"64px\" height=\"64px\" />\n            </div>\n\n            <Text weight=\"bold\" mt=\"1.6rem\">\n                {localize(markets_type[name].title)}\n            </Text>\n            <Text mt=\"0.8rem\">{markets_type[name].content}</Text>\n            <LearnMore to={markets_type[name].to} visibility={button_visibility}>\n                <Text mr=\"1rem\">{localize('Learn more')}</Text>\n                <img src={Arrow} alt=\"arrow right\" />\n            </LearnMore>\n        </StyledFlex>\n    )\n}\nconst MobileCard = ({ name }) => {\n    const Icon = markets_type[name].icon\n    return (\n        <MobileCardWrapper m=\"5.5rem auto 0 auto\" jc=\"flex-start\">\n            <Flex width=\"100%\" jc=\"space-between\" mb=\"2.4rem\" ai=\"center\">\n                <Text size=\"18px\" weight=\"bold\">\n                    {localize(markets_type[name].title)}\n                </Text>\n                <Icon dynamic_id={markets_type[name].id + '_mobile'} />\n            </Flex>\n            <Text size=\"2rem\">{markets_type[name].content}</Text>\n            <LearnMore to={markets_type[name].to} visibility=\"true\">\n                <Text>{localize('Learn more')}</Text>\n                <img src={Arrow} alt=\"arrow right\" />\n            </LearnMore>\n        </MobileCardWrapper>\n    )\n}\nconst MarketsWrapper = styled(Flex)`\n    @media ${device.laptopM} {\n        flex-direction: column;\n        margin: auto;\n    }\n`\nconst Wrapper = styled(Box)`\n    position: relative;\n    max-width: 103rem;\n    width: 100%;\n    height: 19.2rem;\n    background: rgba(133, 172, 176, 0.24);\n    border-radius: 16px;\n`\nconst CardWrapper = styled(Flex)`\n    left: 2.4rem;\n    top: 4rem;\n`\nconst StyledHeader = styled(Header)`\n    max-width: 25.8rem;\n    margin-right: 1rem;\n\n    @media ${device.laptopM} {\n        text-align: center;\n        max-width: unset;\n    }\n    @media ${device.tabletL} {\n        max-width: 32rem;\n        margin: 0 auto;\n        font-size: 24px;\n        margin-bottom: 2rem;\n    }\n`\nconst MobileCardContainer = styled(Flex)`\n    div:first-child {\n        margin-top: 0;\n    }\n`\nconst OtherMarkets = ({ except }) => {\n    const markets = ['forex', 'Synthetic_Indices', 'stock_indices', 'commodities']\n    return (\n        <Section>\n            <Show.Desktop>\n                <MarketsWrapper tablet_jc=\"center\">\n                    <StyledHeader as=\"h3\" type=\"section-title\" align=\"left\">\n                        {localize('Other markets you might be interested in')}\n                    </StyledHeader>\n                    <Box position=\"relative\" width=\"100%\" max_width=\"103rem\" height=\"32rem\">\n                        <Wrapper>\n                            <CardWrapper\n                                max_width=\"93rem\"\n                                jc=\"space-around\"\n                                position=\"absolute\"\n                                height=\"fit-content\"\n                            >\n                                {markets.map((market) =>\n                                    market !== except ? <Card name={market} key={market} /> : null,\n                                )}\n                            </CardWrapper>\n                        </Wrapper>\n                    </Box>\n                </MarketsWrapper>\n            </Show.Desktop>\n            <Show.Mobile>\n                <StyledHeader as=\"h3\" type=\"section-title\" align=\"left\">\n                    {localize('Other markets you might be interested in')}\n                </StyledHeader>\n                <MobileCardContainer direction=\"column\">\n                    {markets.map((market) =>\n                        market !== except ? <MobileCard name={market} key={market} /> : null,\n                    )}\n                </MobileCardContainer>\n            </Show.Mobile>\n        </Section>\n    )\n}\nOtherMarkets.propTypes = {\n    except: PropTypes.string,\n}\nCard.propTypes = {\n    name: PropTypes.string,\n}\nMobileCard.propTypes = {\n    name: PropTypes.string,\n}\nexport default OtherMarkets\n"],"sourceRoot":""}