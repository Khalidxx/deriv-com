{"version":3,"sources":["webpack:///./src/pages/markets/cryptocurrencies/index.js","webpack:///./src/pages/markets/components/sections/_nav-tab.js"],"names":["simple_step_content_cryptocurrencies","header","translate_text","text","icon","src","PractiseIcon","alt","width","height","TradeIcon","WithdrawIcon","WithIntl","description","localize","title","route_from","route_offset","simple_step_content","appearance","Appearances","public","TabsContainer","styled","Flex","TabList","div","device","tabletL","TabButton","button","props","selected","css","Text","TextWrapper","tabletS","LineDivider","StyledLink","LocalizedLink","tabList","tab_name","route_to","NavTab","ref","useRef","useEffect","current","scrollLeft","direction","map","item","index","key","to"],"mappings":"4FAAA,wJAYMA,EAAuC,CACzC,CACIC,OAAQ,kBAAC,IAAD,CAAUC,eAAe,aACjCC,KACI,kBAAC,IAAD,CAAUD,eAAe,gFAE7BE,KAAM,yBAAKC,IAAKC,IAAcC,IAAI,MAAMC,MAAM,KAAKC,OAAO,QAE9D,CACIR,OAAQ,kBAAC,IAAD,CAAUC,eAAe,UACjCC,KACI,kBAAC,IAAD,CAAUD,eAAe,2FAE7BE,KAAM,yBAAKC,IAAKK,IAAWH,IAAI,QAAQC,MAAM,KAAKC,OAAO,QAE7D,CACIR,OAAQ,kBAAC,IAAD,CAAUC,eAAe,aACjCC,KACI,kBAAC,IAAD,CAAUD,eAAe,sFAE7BE,KAAM,yBAAKC,IAAKM,IAAcJ,IAAI,WAAWC,MAAM,KAAKC,OAAO,SAmBxDG,yBAfc,kBACzB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,YAAaC,YACT,qIAEJC,MAAOD,YAAS,wCAEpB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQE,WAAY,mBAAoBC,aAAc,MACtD,kBAAC,IAAD,CAAkBC,oBAAqBlB,IACvC,kBAAC,UAAD,CAAQmB,WAAYC,cAAYC,c,kCC/CxC,qFAQMC,EAAgBC,YAAOC,KAAV,0EAAGD,CAAH,4CAGbE,EAAUF,IAAOG,IAAV,oEAAGH,CAAH,mMAQAI,IAAOC,SAOdC,EAAYN,IAAOO,OAAV,sEAAGP,CAAH,sUAcT,SAACQ,GAAD,OACEA,EAAMC,UACNC,YADA,yDAGMC,QASA,SAACH,GAAD,OAAYA,EAAMC,SAAW,mBAAqB,wBAG1DG,EAAcZ,YAAOW,KAAV,wEAAGX,CAAH,wGAKJI,IAAOS,SAIdC,EAAcd,IAAOG,IAAV,wEAAGH,CAAH,gGASXe,EAAaf,YAAOgB,KAAV,uEAAGhB,CAAH,6CAQViB,EAAU,CACZ,CACIzB,MAAO,kBAAC,IAAD,CAAUb,eAAe,UAChCuC,SAAU,QACVC,SAAU,mBAEd,CACI3B,MAAO,kBAAC,IAAD,CAAUb,eAAe,sBAChCuC,SAAU,YACVC,SAAU,uBAEd,CACI3B,MAAO,kBAAC,IAAD,CAAUb,eAAe,kBAChCuC,SAAU,QACVC,SAAU,mBAEd,CACI3B,MAAO,kBAAC,IAAD,CAAUb,eAAe,gBAChCuC,SAAU,cACVC,SAAU,yBAEd,CACI3B,MAAO,kBAAC,IAAD,CAAUb,eAAe,qBAChCuC,SAAU,mBACVC,SAAU,+BAqCHC,IAjCA,SAAC,GAAkC,IAAhC3B,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACpB2B,EAAMC,iBAAO,MAMnB,OAJAC,qBAAU,WACNF,EAAIG,QAAQC,WAAa/B,IAC1B,CAAC2B,EAAIG,UAGJ,kBAACzB,EAAD,KACI,kBAAC,IAAD,CAAM2B,UAAU,UACZ,kBAACxB,EAAD,CAASmB,IAAKA,GACTJ,EAAQU,KAAI,SAACC,EAAMC,GAChB,OACI,kBAACvB,EAAD,CAAWG,SAAUhB,GAAcmC,EAAKV,SAAUY,IAAKD,GACnD,kBAACd,EAAD,CAAYgB,GAAIH,EAAKT,UACjB,kBAACP,EAAD,KAAcgB,EAAKpC,YAMnC,kBAACsB,EAAD","file":"component---src-pages-markets-cryptocurrencies-index-js-b3f474456f9e95529ca5.js","sourcesContent":["import React from 'react'\nimport { Hero } from '../components/sections/_hero'\nimport NavTab from '../components/sections/_nav-tab'\nimport Cryptocurrencies from '../components/markets/_cryptocurrencies.js'\nimport Signup, { Appearances } from 'components/custom/signup'\nimport Layout from 'components/layout/layout'\nimport { localize, Localize, WithIntl } from 'components/localization'\nimport { SEO } from 'components/containers'\nimport PractiseIcon from 'images/svg/aim.svg'\nimport TradeIcon from 'images/svg/trade.svg'\nimport WithdrawIcon from 'images/svg/withdraw.svg'\n\nconst simple_step_content_cryptocurrencies = [\n    {\n        header: <Localize translate_text=\"Practise\" />,\n        text: (\n            <Localize translate_text=\"Open a demo account and practise with an unlimited amount of virtual funds.\" />\n        ),\n        icon: <img src={PractiseIcon} alt=\"aim\" width=\"32\" height=\"32\" />,\n    },\n    {\n        header: <Localize translate_text=\"Trade\" />,\n        text: (\n            <Localize translate_text=\"Open a real account, make a deposit, and start trading commodities and other markets. \" />\n        ),\n        icon: <img src={TradeIcon} alt=\"trade\" width=\"32\" height=\"28\" />,\n    },\n    {\n        header: <Localize translate_text=\"Withdraw\" />,\n        text: (\n            <Localize translate_text=\"Conveniently withdraw your funds through any of our supported withdrawal methods.\" />\n        ),\n        icon: <img src={WithdrawIcon} alt=\"withdraw\" width=\"32\" height=\"32\" />,\n    },\n]\n\nconst CryptocurrenciesPage = () => (\n    <Layout>\n        <SEO\n            description={localize(\n                'Learn about the markets that you can trade online with Deriv, including forex, commodities, synthetic indices, and stock indices.',\n            )}\n            title={localize('Markets | Markets to trade | Deriv')}\n        />\n        <Hero />\n        <NavTab route_from={'cryptocurrencies'} route_offset={480} />\n        <Cryptocurrencies simple_step_content={simple_step_content_cryptocurrencies} />\n        <Signup appearance={Appearances.public} />\n    </Layout>\n)\n\nexport default WithIntl()(CryptocurrenciesPage)\n","import React, { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css } from 'styled-components'\nimport { Text } from 'components/elements'\nimport { Flex } from 'components/containers'\nimport { Localize, LocalizedLink } from 'components/localization'\nimport device from 'themes/device'\n\nconst TabsContainer = styled(Flex)`\n    background-color: var(--color-grey-23);\n`\nconst TabList = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    position: relative;\n    overflow: auto;\n    padding-top: 2.4rem;\n\n    @media ${device.tabletL} {\n        justify-content: start;\n        overflow-x: scroll;\n        scroll-behavior: smooth;\n        padding-top: 16px;\n    }\n`\nconst TabButton = styled.button`\n    z-index: 2;\n    height: auto;\n    padding: 8px 24px 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    background: transparent;\n    outline: none;\n    transition: border-color 0.2s ease-in;\n    border: none;\n    border-bottom: 2px solid var(--color-grey-2);\n    white-space: nowrap;\n    ${(props) =>\n        props.selected &&\n        css`\n            border-color: var(--color-red);\n            ${Text} {\n                font-weight: bold;\n            }\n        `}\n\n    &:hover,\n    &:focus,\n    &:active {\n        border-bottom: 2px solid\n            ${(props) => (props.selected ? 'var(--color-red)' : 'var(--color-red-2)')};\n    }\n`\nconst TextWrapper = styled(Text)`\n    text-align: center;\n    font-size: var(--text-size-m);\n    color: var(--color-black);\n\n    @media ${device.tabletS} {\n        font-size: 24px;\n    }\n`\nconst LineDivider = styled.div`\n    bottom: 0;\n    position: absolute;\n    height: 2px;\n    width: 100%;\n    background: var(--color-grey-2);\n    z-index: 1;\n`\n\nconst StyledLink = styled(LocalizedLink)`\n    text-decoration: none;\n\n    :hover {\n        color: red;\n    }\n`\n\nconst tabList = [\n    {\n        title: <Localize translate_text=\"Forex\" />,\n        tab_name: 'forex',\n        route_to: '/markets/forex/',\n    },\n    {\n        title: <Localize translate_text=\"Synthetic indices\" />,\n        tab_name: 'synthetic',\n        route_to: '/markets/synthetic/',\n    },\n    {\n        title: <Localize translate_text=\"Stock indices\" />,\n        tab_name: 'stock',\n        route_to: '/markets/stock/',\n    },\n    {\n        title: <Localize translate_text=\"Commodities\" />,\n        tab_name: 'commodities',\n        route_to: '/markets/commodities/',\n    },\n    {\n        title: <Localize translate_text=\"Cryptocurrencies\" />,\n        tab_name: 'cryptocurrencies',\n        route_to: '/markets/cryptocurrencies/',\n    },\n]\n\nconst NavTab = ({ route_from, route_offset }) => {\n    const ref = useRef(null)\n\n    useEffect(() => {\n        ref.current.scrollLeft = route_offset\n    }, [ref.current])\n\n    return (\n        <TabsContainer>\n            <Flex direction=\"column\">\n                <TabList ref={ref}>\n                    {tabList.map((item, index) => {\n                        return (\n                            <TabButton selected={route_from == item.tab_name} key={index}>\n                                <StyledLink to={item.route_to}>\n                                    <TextWrapper>{item.title}</TextWrapper>\n                                </StyledLink>\n                            </TabButton>\n                        )\n                    })}\n\n                    <LineDivider />\n                </TabList>\n            </Flex>\n        </TabsContainer>\n    )\n}\n\nNavTab.propTypes = {\n    route_from: PropTypes.string,\n    route_offset: PropTypes.number,\n}\n\nexport default NavTab\n"],"sourceRoot":""}