{"version":3,"sources":["webpack:///./src/pages/trader-tools/pnl-for-margin/_pnl-for-margin.js","webpack:///./src/pages/trader-tools/pnl-for-margin/index.js","webpack:///./src/pages/trader-tools/common/_underlying-data.js"],"names":["PnlMarginCalculator","data","useStaticQuery","formik_ref","useRef","form","current","useState","tab","setTab","sub_tab","setSubTab","stop_loss_output","setStopLossOutput","take_profit_output","setTakeProfitOutput","onTabClick","resetForm","setErrors","setFieldValue","syntheticItemLists","financialItemLists","onSubTabClick","React","useEffect","values","pointValue","getPnlMarginCommon","jc","ai","to","color","localize","src","RightArrow","alt","height","width","style","margin","direction","as","type","align","weight","mt","mb","tablet","active","onClick","size","innerRef","enableReinitialize","initialValues","accountType","pnlMarginSymbol","stopLossPips","stopLossLevel","takeProfitPips","takeProfitLevel","symbol","volume","takeProfitAmount","optionList","contractSize","assetPrice","stopLossAmount","validate","resetValidationPnlMargin","onSubmit","numberSubmitFormat","handleBlur","errors","touched","setFieldError","setFieldTouched","isValid","dirty","Desktop","max_width","fd","mr","htmlFor","numberWithCommas","disabled","option_list","label","default_option","optionItemDefault","selected_option","id","onChange","value","getCurrency","getContractSize","error","onBlur","name","field","autoComplete","data-lpignore","handleError","current_input","focus","maxLength","background","secondary","Mobile","min_width","translate_text","components","key","has_single_state","header","header_style","padding","plus","stop_loss_level_formula","stop_loss_level_formula_mobile","stop_loss_pip_formula","stop_loss_pip_formula_mobile","external","target","rel","take_profit_level_formula","take_profit_level_formula_mobile","take_profit_pip_formula","take_profit_pip_formula_mobile","WithIntl","title","description","display_name","icon","market","leverageItemLists","BOOM1000","BOOM500","CRASH1000","CRASH500","RANGEBREAK100","RANGEBREAK200","STEPINDICES","HFVOL10","HFVOL50","HFVOL100","INDEX10S1","INDEX10","INDEX25S1","INDEX25","INDEX50S1","INDEX50","INDEX75S1","INDEX75","INDEX100S1","INDEX100","AAL","AAPL","ABNB","ADS","AIG","AMZN","BA","BABA","BAC","BAY","BIIB","BMW","C","CRM","CSCO","DAL","DBK","DIS","EBAY","FB","FDX","GM","GOOGL","GS","HPQ","IBM","INTC","JNJ","JPM","KO","MA","MCD","MRNA","MSFT","NFLX","NKE","NVDA","PFE","PG","PYPL","TEVA","TSLA","TWTR","UBER","V","WMT","ZM","AUS200","DAX30","ESP35","EUR50","FRA40","UK100","JP225","NED25","US500","US100","US30","CLBRENT","BCHUSD","BTCUSD","DSHUSD","EOSUSD","LTCUSD","XRPUSD","AUDCAD","AUDCHF","AUDJPY","AUDNZD","AUDUSD","EURCAD","EURCHF","EURGBP","EURJPY","EURNZD","EURUSD","GBPCHF","GBPJPY","GBPUSD","NZDUSD","USDCAD","USDCHF","USDJPY","CADCHF","CADJPY","GBPAUD","GBPCAD","GBPNZD","NZDCAD","NZDJPY","USDZAR","CHFJPY","OILUSD","GOLDUSD","SILVERUSD","PALLADIUMUSD","PLATINUMUSD","AUDINDEX","GBPINDEX","EURINDEX","USDINDEX"],"mappings":"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","file":"component---src-pages-trader-tools-pnl-for-margin-index-js-9b26e90bfccf8e29af36.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { Field, Formik } from 'formik'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport {\n    getContractSize,\n    getCurrency,\n    getPnlMarginCommon,\n    numberSubmitFormat,\n    numberWithCommas,\n    resetValidationPnlMargin,\n} from '../common/_utility'\nimport {\n    financialItemLists,\n    optionItemDefault,\n    syntheticItemLists,\n} from '../common/_underlying-data'\nimport {\n    BreadCrumbContainer,\n    CalculateButton,\n    CalculatorBody,\n    CalculatorDropdown,\n    CalculatorForm,\n    CalculatorHeader,\n    CalculatorLabel,\n    ContentContainer,\n    FormulaText,\n    FormWrapper,\n    header_style,\n    InputGroup,\n    LinkWrapper,\n    PnlCalculatorFormMobile,\n    PnlCalculatorHeaderMobile,\n    PnLCalculatorOutputContainer,\n    PnLCalculatorOutputField,\n    PnLCalculatorOutputSymbol,\n    PnlCalculatorTabItem,\n    PnlHeaderOverflow,\n    PnLInputGroup,\n    RightContent,\n    SectionSubtitle,\n    StyledLinkButton,\n    StyledOl,\n    StyledSection,\n    SwapTabSelector,\n} from '../common/_style'\nimport { localize, Localize } from 'components/localization'\nimport {\n    Accordion,\n    AccordionItem,\n    Header,\n    LocalizedLinkText,\n    QueryImage,\n    Text,\n} from 'components/elements'\nimport { Flex, Show } from 'components/containers'\nimport Input from 'components/form/input'\nimport RightArrow from 'images/svg/black-right-arrow.svg'\n\nconst PnlMarginCalculator = () => {\n    const query = graphql`\n        query {\n            stop_loss_level_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_level_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_pip_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-pip-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_pip_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-pip-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_pip_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-pip-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_pip_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-pip-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n        }\n    `\n    const data = useStaticQuery(query)\n    const formik_ref = useRef()\n    const form = formik_ref.current\n\n    const [tab, setTab] = useState('Buy')\n    const [sub_tab, setSubTab] = useState('Synthetic')\n    // These additional states have been created to track the first output (levels)\n    // from the calculator in order to rerender the second output (pips)\n    const [stop_loss_output, setStopLossOutput] = useState(0)\n    const [take_profit_output, setTakeProfitOutput] = useState(0)\n\n    const onTabClick = (tab) => {\n        setTab(tab)\n        form?.resetForm({})\n        form?.setErrors({})\n        form?.setFieldValue('accountType', sub_tab === 'Synthetic' ? 'Synthetic' : 'Financial')\n        form?.setFieldValue(\n            'optionList',\n            sub_tab === 'Synthetic' ? syntheticItemLists : financialItemLists,\n        )\n    }\n    const onSubTabClick = (tab) => setSubTab(tab)\n\n    // Watch the state of the first output, and update the second output upon change\n    // TODO: Find a cleaner solution for this\n    React.useEffect(() => {\n        if (form?.values.pointValue) {\n            form.setFieldValue(\n                'stopLossPips',\n                getPnlMarginCommon(formik_ref.current.values, 'getStopLossPip'),\n            )\n            form.setFieldValue(\n                'takeProfitPips',\n                getPnlMarginCommon(formik_ref.current.values, 'getTakeProfitPip'),\n            )\n            // The 2 calls below is to reset the output state in order\n            // prevent the pip output from displaying NAN\n            setStopLossOutput(0)\n            setTakeProfitOutput(0)\n        }\n    }, [stop_loss_output, take_profit_output])\n\n    return (\n        <>\n            <BreadCrumbContainer>\n                <Flex jc=\"flex-start\" ai=\"center\">\n                    <LocalizedLinkText to=\"/trader-tools\" color=\"grey-5\">\n                        {localize(\"Traders' tools\")}\n                    </LocalizedLinkText>\n                    <img\n                        src={RightArrow}\n                        alt={localize('right arrow')}\n                        height=\"16\"\n                        width=\"16\"\n                        style={{ margin: '0 8px' }}\n                    />\n                    <Text>{localize('PnL for margin')}</Text>\n                </Flex>\n            </BreadCrumbContainer>\n            <StyledSection direction=\"column\">\n                <SectionSubtitle as=\"h3\" type=\"sub-section-title\" align=\"center\" weight=\"normal\">\n                    {localize(\n                        'Our profit and loss calculator for margin helps you to approximate your losses and/or gains.',\n                    )}\n                </SectionSubtitle>\n\n                <Flex mt=\"80px\" mb=\"40px\" tablet={{ mt: '40px', mb: '24px' }}>\n                    <SwapTabSelector active={tab === 'Buy'} onClick={() => onTabClick('Buy')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Buy')}\n                        </Text>\n                    </SwapTabSelector>\n                    <SwapTabSelector active={tab === 'Sell'} onClick={() => onTabClick('Sell')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Sell')}\n                        </Text>\n                    </SwapTabSelector>\n                </Flex>\n\n                <ContentContainer mb=\"4.0rem\">\n                    <FormWrapper>\n                        <Formik\n                            innerRef={formik_ref}\n                            enableReinitialize\n                            initialValues={{\n                                accountType: 'Synthetic',\n                                pnlMarginSymbol: 'USD',\n                                stopLossPips: 0,\n                                stopLossLevel: 0,\n                                takeProfitPips: 0,\n                                takeProfitLevel: 0,\n                                symbol: '',\n                                pointValue: '',\n                                volume: '',\n                                takeProfitAmount: '',\n                                optionList: syntheticItemLists,\n                                contractSize: '',\n                                assetPrice: '',\n                                stopLossAmount: '',\n                            }}\n                            validate={resetValidationPnlMargin}\n                            onSubmit={(values, { setFieldValue }) => {\n                                setFieldValue(\n                                    'stopLossPips',\n                                    getPnlMarginCommon(values, 'getStopLossPip'),\n                                )\n                                setFieldValue(\n                                    'stopLossLevel',\n                                    getPnlMarginCommon(values, 'getStopLossLevel'),\n                                )\n                                setStopLossOutput(getPnlMarginCommon(values, 'getStopLossLevel'))\n                                setFieldValue(\n                                    'takeProfitPips',\n                                    getPnlMarginCommon(values, 'getTakeProfitPip'),\n                                )\n                                setFieldValue(\n                                    'takeProfitLevel',\n                                    getPnlMarginCommon(values, 'getTakeProfitLevel'),\n                                )\n                                setTakeProfitOutput(\n                                    getPnlMarginCommon(values, 'getTakeProfitLevel'),\n                                )\n                                setFieldValue('pointValue', numberSubmitFormat(values.pointValue))\n                                setFieldValue('volume', numberSubmitFormat(values.volume))\n                                setFieldValue('assetPrice', numberSubmitFormat(values.assetPrice))\n                                setFieldValue(\n                                    'stopLossAmount',\n                                    numberSubmitFormat(values.stopLossAmount),\n                                )\n                                setFieldValue(\n                                    'takeProfitAmount',\n                                    numberSubmitFormat(values.takeProfitAmount),\n                                )\n                            }}\n                        >\n                            {({\n                                values,\n                                setFieldValue,\n                                handleBlur,\n                                errors,\n                                touched,\n                                setFieldError,\n                                setFieldTouched,\n                                isValid,\n                                dirty,\n                                setErrors,\n                                resetForm,\n                            }) => (\n                                <>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <CalculatorForm>\n                                            <CalculatorHeader>\n                                                <Flex mb=\"24px\">\n                                                    <Flex fd=\"column\" mr=\"24px\">\n                                                        <CalculatorLabel htmlFor=\"message\">\n                                                            {localize('Stop loss pips')}\n                                                        </CalculatorLabel>\n                                                        <PnLCalculatorOutputContainer>\n                                                            <PnLCalculatorOutputField>\n                                                                {numberWithCommas(\n                                                                    values.stopLossPips,\n                                                                )}\n                                                            </PnLCalculatorOutputField>\n                                                            <PnLCalculatorOutputSymbol>\n                                                                {values.pnlMarginSymbol}\n                                                            </PnLCalculatorOutputSymbol>\n                                                        </PnLCalculatorOutputContainer>\n                                                    </Flex>\n                                                    <Flex fd=\"column\">\n                                                        <CalculatorLabel htmlFor=\"message\">\n                                                            {localize('Stop loss level')}\n                                                        </CalculatorLabel>\n                                                        <PnLCalculatorOutputContainer>\n                                                            <PnLCalculatorOutputField>\n                                                                {numberWithCommas(\n                                                                    values.stopLossLevel,\n                                                                )}\n                                                            </PnLCalculatorOutputField>\n                                                            <PnLCalculatorOutputSymbol>\n                                                                {values.pnlMarginSymbol}\n                                                            </PnLCalculatorOutputSymbol>\n                                                        </PnLCalculatorOutputContainer>\n                                                    </Flex>\n                                                </Flex>\n\n                                                <Flex>\n                                                    <Flex fd=\"column\" mr=\"24px\">\n                                                        <CalculatorLabel htmlFor=\"message\">\n                                                            {localize('Take profit pips')}\n                                                        </CalculatorLabel>\n                                                        <PnLCalculatorOutputContainer>\n                                                            <PnLCalculatorOutputField>\n                                                                {numberWithCommas(\n                                                                    values.takeProfitPips,\n                                                                )}\n                                                            </PnLCalculatorOutputField>\n                                                            <PnLCalculatorOutputSymbol>\n                                                                {values.pnlMarginSymbol}\n                                                            </PnLCalculatorOutputSymbol>\n                                                        </PnLCalculatorOutputContainer>\n                                                    </Flex>\n                                                    <Flex fd=\"column\">\n                                                        <CalculatorLabel htmlFor=\"message\">\n                                                            {localize('Take profit level')}\n                                                        </CalculatorLabel>\n                                                        <PnLCalculatorOutputContainer>\n                                                            <PnLCalculatorOutputField>\n                                                                {numberWithCommas(\n                                                                    values.takeProfitLevel,\n                                                                )}\n                                                            </PnLCalculatorOutputField>\n                                                            <PnLCalculatorOutputSymbol>\n                                                                {values.pnlMarginSymbol}\n                                                            </PnLCalculatorOutputSymbol>\n                                                        </PnLCalculatorOutputContainer>\n                                                    </Flex>\n                                                </Flex>\n                                            </CalculatorHeader>\n\n                                            <CalculatorBody>\n                                                <CalculatorLabel>\n                                                    {localize('Account type')}\n                                                </CalculatorLabel>\n                                                <Flex\n                                                    mb=\"3rem\"\n                                                    mt=\"1rem\"\n                                                    jc=\"space-between\"\n                                                    tablet={{ height: 'unset' }}\n                                                >\n                                                    <PnlCalculatorTabItem\n                                                        active={sub_tab === 'Synthetic'}\n                                                        onClick={() => {\n                                                            onSubTabClick('Synthetic')\n                                                            setErrors()\n                                                            resetForm()\n                                                        }}\n                                                    >\n                                                        <Text align=\"center\">\n                                                            {localize('Synthetic')}\n                                                        </Text>\n                                                    </PnlCalculatorTabItem>\n                                                    <PnlCalculatorTabItem\n                                                        active={sub_tab === 'Financial'}\n                                                        disabled={sub_tab === 'Financial'}\n                                                        onClick={() => {\n                                                            onSubTabClick('Financial')\n                                                            setErrors()\n                                                            resetForm()\n                                                            setFieldValue(\n                                                                'accountType',\n                                                                'Financial',\n                                                            )\n                                                            setFieldValue(\n                                                                'optionList',\n                                                                financialItemLists,\n                                                            )\n                                                        }}\n                                                    >\n                                                        <Text align=\"center\">\n                                                            {localize('Financial')}\n                                                        </Text>\n                                                    </PnlCalculatorTabItem>\n                                                </Flex>\n                                                <Flex jc=\"space-between\">\n                                                    <Flex fd=\"column\" width=\"23.4rem\">\n                                                        <CalculatorDropdown\n                                                            option_list={values.optionList}\n                                                            label={localize('Symbol')}\n                                                            default_option={optionItemDefault}\n                                                            selected_option={values.symbol}\n                                                            id=\"symbol\"\n                                                            onChange={(value) => {\n                                                                setFieldValue(\n                                                                    'pnlMarginSymbol',\n                                                                    getCurrency(value),\n                                                                )\n\n                                                                setFieldValue(\n                                                                    'contractSize',\n                                                                    getContractSize(value),\n                                                                )\n                                                                setFieldValue('symbol', value)\n                                                            }}\n                                                            contractSize={values.contractSize}\n                                                            error={touched.symbol && errors.symbol}\n                                                            onBlur={handleBlur}\n                                                        />\n                                                    </Flex>\n                                                    <Flex fd=\"column\" width=\"23.4rem\">\n                                                        <PnLInputGroup>\n                                                            <Field\n                                                                name=\"pointValue\"\n                                                                value={values.pointValue}\n                                                                onChange={(value) => {\n                                                                    setFieldValue(\n                                                                        'pointValue',\n                                                                        value,\n                                                                    )\n                                                                }}\n                                                            >\n                                                                {({ field }) => (\n                                                                    <Input\n                                                                        {...field}\n                                                                        id=\"pointValue\"\n                                                                        type=\"text\"\n                                                                        label={localize(\n                                                                            'Point value',\n                                                                        )}\n                                                                        autoComplete=\"off\"\n                                                                        error={\n                                                                            touched.pointValue &&\n                                                                            errors.pointValue\n                                                                        }\n                                                                        onBlur={handleBlur}\n                                                                        data-lpignore=\"true\"\n                                                                        handleError={(\n                                                                            current_input,\n                                                                        ) => {\n                                                                            setFieldValue(\n                                                                                'pointValue',\n                                                                                '',\n                                                                                false,\n                                                                            )\n                                                                            setFieldError(\n                                                                                'pointValue',\n                                                                                '',\n                                                                            )\n                                                                            setFieldTouched(\n                                                                                'pointValue',\n                                                                                false,\n                                                                                false,\n                                                                            )\n                                                                            current_input.focus()\n                                                                        }}\n                                                                        maxLength=\"8\"\n                                                                        background=\"white\"\n                                                                    />\n                                                                )}\n                                                            </Field>\n                                                        </PnLInputGroup>\n                                                    </Flex>\n                                                </Flex>\n\n                                                <Flex jc=\"space-between\" mb=\"17px\">\n                                                    <Flex fd=\"column\" width=\"23.4rem\">\n                                                        <PnLInputGroup>\n                                                            <Field\n                                                                name=\"volume\"\n                                                                value={values.volume}\n                                                                onChange={(value) => {\n                                                                    setFieldValue('volume', value)\n                                                                }}\n                                                            >\n                                                                {({ field }) => (\n                                                                    <Input\n                                                                        {...field}\n                                                                        id=\"volume\"\n                                                                        type=\"text\"\n                                                                        label={localize('Volume')}\n                                                                        autoComplete=\"off\"\n                                                                        error={\n                                                                            touched.volume &&\n                                                                            errors.volume\n                                                                        }\n                                                                        onBlur={handleBlur}\n                                                                        data-lpignore=\"true\"\n                                                                        handleError={(\n                                                                            current_input,\n                                                                        ) => {\n                                                                            setFieldValue(\n                                                                                'volume',\n                                                                                '',\n                                                                                false,\n                                                                            )\n                                                                            setFieldError(\n                                                                                'volume',\n                                                                                '',\n                                                                            )\n                                                                            setFieldTouched(\n                                                                                'volume',\n                                                                                false,\n                                                                                false,\n                                                                            )\n                                                                            current_input.focus()\n                                                                        }}\n                                                                        maxLength=\"8\"\n                                                                        background=\"white\"\n                                                                    />\n                                                                )}\n                                                            </Field>\n                                                        </PnLInputGroup>\n                                                    </Flex>\n                                                    <Flex fd=\"column\" width=\"23.4rem\">\n                                                        <PnLInputGroup>\n                                                            <Field\n                                                                name=\"takeProfitAmount\"\n                                                                value={values.takeProfitAmount}\n                                                                onChange={(value) => {\n                                                                    setFieldValue(\n                                                                        'takeProfitAmount',\n                                                                        value,\n                                                                    )\n                                                                }}\n                                                            >\n                                                                {({ field }) => (\n                                                                    <Input\n                                                                        {...field}\n                                                                        id=\"takeProfitAmount\"\n                                                                        type=\"text\"\n                                                                        label={localize(\n                                                                            'Take profit amount',\n                                                                        )}\n                                                                        autoComplete=\"off\"\n                                                                        error={\n                                                                            touched.takeProfitAmount &&\n                                                                            errors.takeProfitAmount\n                                                                        }\n                                                                        onBlur={handleBlur}\n                                                                        data-lpignore=\"true\"\n                                                                        handleError={(\n                                                                            current_input,\n                                                                        ) => {\n                                                                            setFieldValue(\n                                                                                'takeProfitAmount',\n                                                                                '',\n                                                                                false,\n                                                                            )\n                                                                            setFieldError(\n                                                                                'takeProfitAmount',\n                                                                                '',\n                                                                            )\n                                                                            setFieldTouched(\n                                                                                'takeProfitAmount',\n                                                                                false,\n                                                                                false,\n                                                                            )\n                                                                            current_input.focus()\n                                                                        }}\n                                                                        maxLength=\"15\"\n                                                                        background=\"white\"\n                                                                    />\n                                                                )}\n                                                            </Field>\n                                                        </PnLInputGroup>\n                                                    </Flex>\n                                                </Flex>\n\n                                                <Flex jc=\"space-between\">\n                                                    <Flex fd=\"column\" width=\"23.4rem\">\n                                                        <PnLInputGroup>\n                                                            <Field\n                                                                name=\"assetPrice\"\n                                                                value={values.assetPrice}\n                                                                onChange={(value) => {\n                                                                    setFieldValue(\n                                                                        'assetPrice',\n                                                                        value,\n                                                                    )\n                                                                }}\n                                                            >\n                                                                {({ field }) => (\n                                                                    <Input\n                                                                        {...field}\n                                                                        id=\"assetPrice\"\n                                                                        type=\"text\"\n                                                                        value={values.assetPrice}\n                                                                        label={localize(\n                                                                            'Open price of asset',\n                                                                        )}\n                                                                        autoComplete=\"off\"\n                                                                        error={\n                                                                            touched.assetPrice &&\n                                                                            errors.assetPrice\n                                                                        }\n                                                                        onBlur={handleBlur}\n                                                                        data-lpignore=\"true\"\n                                                                        handleError={(\n                                                                            current_input,\n                                                                        ) => {\n                                                                            setFieldValue(\n                                                                                'assetPrice',\n                                                                                '',\n                                                                                false,\n                                                                            )\n                                                                            setFieldError(\n                                                                                'assetPrice',\n                                                                                '',\n                                                                            )\n                                                                            setFieldTouched(\n                                                                                'assetPrice',\n                                                                                false,\n                                                                                false,\n                                                                            )\n                                                                            current_input.focus()\n                                                                        }}\n                                                                        maxLength=\"15\"\n                                                                        background=\"white\"\n                                                                    />\n                                                                )}\n                                                            </Field>\n                                                        </PnLInputGroup>\n                                                    </Flex>\n                                                    <Flex fd=\"column\" width=\"23.4rem\">\n                                                        <PnLInputGroup>\n                                                            <Field\n                                                                name=\"stopLossAmount\"\n                                                                value={values.stopLossAmount}\n                                                                onChange={(value) => {\n                                                                    setFieldValue(\n                                                                        'stopLossAmount',\n                                                                        value,\n                                                                    )\n                                                                }}\n                                                            >\n                                                                {({ field }) => (\n                                                                    <Input\n                                                                        {...field}\n                                                                        id=\"assetPrice\"\n                                                                        type=\"text\"\n                                                                        value={\n                                                                            values.stopLossAmount\n                                                                        }\n                                                                        label={localize(\n                                                                            'Stop loss amount',\n                                                                        )}\n                                                                        autoComplete=\"off\"\n                                                                        error={\n                                                                            touched.stopLossAmount &&\n                                                                            errors.stopLossAmount\n                                                                        }\n                                                                        onBlur={handleBlur}\n                                                                        data-lpignore=\"true\"\n                                                                        handleError={(\n                                                                            current_input,\n                                                                        ) => {\n                                                                            setFieldValue(\n                                                                                'stopLossAmount',\n                                                                                '',\n                                                                                false,\n                                                                            )\n                                                                            setFieldError(\n                                                                                'stopLossAmount',\n                                                                                '',\n                                                                            )\n                                                                            setFieldTouched(\n                                                                                'stopLossAmount',\n                                                                                false,\n                                                                                false,\n                                                                            )\n                                                                            current_input.focus()\n                                                                        }}\n                                                                        maxLength=\"15\"\n                                                                        background=\"white\"\n                                                                    />\n                                                                )}\n                                                            </Field>\n                                                        </PnLInputGroup>\n                                                    </Flex>\n                                                </Flex>\n\n                                                <Flex mt=\"1.5rem\">\n                                                    <CalculateButton\n                                                        secondary\n                                                        type=\"submit\"\n                                                        disabled={!isValid || !dirty}\n                                                    >\n                                                        {localize('Calculate')}\n                                                    </CalculateButton>\n                                                </Flex>\n                                            </CalculatorBody>\n                                        </CalculatorForm>\n                                    </Show.Desktop>\n\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <PnlCalculatorFormMobile>\n                                            <PnlHeaderOverflow>\n                                                <PnlCalculatorHeaderMobile>\n                                                    <Flex mb=\"24px\">\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss pips')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.stopLossPips,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.stopLossLevel,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex>\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit pips')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.takeProfitPips,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.takeProfitLevel,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n                                                </PnlCalculatorHeaderMobile>\n                                            </PnlHeaderOverflow>\n\n                                            <CalculatorBody>\n                                                <CalculatorLabel>\n                                                    {localize('Account type')}\n                                                </CalculatorLabel>\n                                                <Flex\n                                                    mb=\"3rem\"\n                                                    mt=\"1rem\"\n                                                    jc=\"space-between\"\n                                                    tablet={{ height: 'unset' }}\n                                                >\n                                                    <PnlCalculatorTabItem\n                                                        active={sub_tab === 'Synthetic'}\n                                                        onClick={() => {\n                                                            onSubTabClick('Synthetic')\n                                                            setErrors()\n                                                            resetForm()\n                                                        }}\n                                                    >\n                                                        <Text align=\"center\">\n                                                            {localize('Synthetic')}\n                                                        </Text>\n                                                    </PnlCalculatorTabItem>\n                                                    <PnlCalculatorTabItem\n                                                        active={sub_tab === 'Financial'}\n                                                        disabled={sub_tab === 'Financial'}\n                                                        onClick={() => {\n                                                            onSubTabClick('Financial')\n                                                            setErrors()\n                                                            resetForm()\n                                                            setFieldValue(\n                                                                'accountType',\n                                                                'Financial',\n                                                            )\n                                                            setFieldValue(\n                                                                'optionList',\n                                                                financialItemLists,\n                                                            )\n                                                        }}\n                                                    >\n                                                        <Text align=\"center\">\n                                                            {localize('Financial')}\n                                                        </Text>\n                                                    </PnlCalculatorTabItem>\n                                                </Flex>\n                                                <CalculatorDropdown\n                                                    option_list={values.optionList}\n                                                    label={localize('Symbol')}\n                                                    default_option={optionItemDefault}\n                                                    selected_option={values.symbol}\n                                                    id=\"symbol\"\n                                                    onChange={(value) => {\n                                                        setFieldValue(\n                                                            'pnlMarginSymbol',\n                                                            getCurrency(value),\n                                                        )\n\n                                                        setFieldValue(\n                                                            'contractSize',\n                                                            getContractSize(value),\n                                                        )\n                                                        setFieldValue('symbol', value)\n                                                    }}\n                                                    contractSize={values.contractSize}\n                                                    error={touched.symbol && errors.symbol}\n                                                    onBlur={handleBlur}\n                                                />\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"volume\"\n                                                        value={values.volume}\n                                                        onChange={(value) => {\n                                                            setFieldValue('volume', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"volume\"\n                                                                type=\"text\"\n                                                                label={localize('Volume')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.volume && errors.volume\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'volume',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('volume', '')\n                                                                    setFieldTouched(\n                                                                        'volume',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength=\"8\"\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"assetPrice\"\n                                                        value={values.assetPrice}\n                                                        onChange={(value) => {\n                                                            setFieldValue('assetPrice', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"assetPrice\"\n                                                                type=\"text\"\n                                                                value={values.assetPrice}\n                                                                label={localize(\n                                                                    'Open price of asset',\n                                                                )}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.assetPrice &&\n                                                                    errors.assetPrice\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'assetPrice',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('assetPrice', '')\n                                                                    setFieldTouched(\n                                                                        'assetPrice',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength=\"15\"\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"pointValue\"\n                                                        value={values.pointValue}\n                                                        onChange={(value) => {\n                                                            setFieldValue('pointValue', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"pointValue\"\n                                                                type=\"text\"\n                                                                label={localize('Point value')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.pointValue &&\n                                                                    errors.pointValue\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'pointValue',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('pointValue', '')\n                                                                    setFieldTouched(\n                                                                        'pointValue',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength=\"8\"\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"takeProfitAmount\"\n                                                        value={values.takeProfitAmount}\n                                                        onChange={(value) => {\n                                                            setFieldValue('takeProfitAmount', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"takeProfitAmount\"\n                                                                type=\"text\"\n                                                                label={localize(\n                                                                    'Take profit amount',\n                                                                )}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.takeProfitAmount &&\n                                                                    errors.takeProfitAmount\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'takeProfitAmount',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError(\n                                                                        'takeProfitAmount',\n                                                                        '',\n                                                                    )\n                                                                    setFieldTouched(\n                                                                        'takeProfitAmount',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength=\"15\"\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"stopLossAmount\"\n                                                        value={values.stopLossAmount}\n                                                        onChange={(value) => {\n                                                            setFieldValue('stopLossAmount', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"assetPrice\"\n                                                                type=\"text\"\n                                                                value={values.stopLossAmount}\n                                                                label={localize('Stop loss amount')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.stopLossAmount &&\n                                                                    errors.stopLossAmount\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'stopLossAmount',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError(\n                                                                        'stopLossAmount',\n                                                                        '',\n                                                                    )\n                                                                    setFieldTouched(\n                                                                        'stopLossAmount',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength=\"15\"\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n\n                                                <Flex mt=\"1.5rem\">\n                                                    <CalculateButton\n                                                        secondary\n                                                        type=\"submit\"\n                                                        disabled={!isValid || !dirty}\n                                                    >\n                                                        {localize('Calculate')}\n                                                    </CalculateButton>\n                                                </Flex>\n                                            </CalculatorBody>\n                                        </PnlCalculatorFormMobile>\n                                    </Show.Mobile>\n                                </>\n                            )}\n                        </Formik>\n                    </FormWrapper>\n\n                    {tab === 'Buy' ? (\n                        <RightContent>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize(\n                                    'How to calculate stop loss and/or take profit level and pip value',\n                                )}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level and pip value when buying a contract on Deriv MetaTrader 5 (DMT5) is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level = asset price + {stop loss OR take profit amount ÷ (volume × contract size)}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit pip value = |(stop loss OR take profit level - asset price)| ÷ point value</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level helps you to manage your risk when you are buying a contract.',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'For financial accounts, the stop loss and/or take profit pip value is in the quote currency for forex pairs.',\n                                )}\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'For synthetic accounts, the stop loss and/or take profit pip value is in USD.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('Example calculation')}\n                            </Header>\n                            <Text mb=\"16px\">\n                                {localize(\n                                    'Let’s say you want to calculate the stop loss level and pip value when you want to buy a lot of EUR/USD priced at 1.17524 USD with a stop loss amount of 24 USD.',\n                                )}\n                            </Text>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Stop loss level')}\n                                    header_style={header_style}\n                                    style={{\n                                        padding: '0 0 24px 0',\n                                    }}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_formula}\n                                            alt={localize('stop loss level formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_formula_mobile}\n                                            alt={localize('stop loss level formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText size=\"14px\">\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The contract size is one standard lot of forex = 100,000 units.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Stop loss pip value')}\n                                    header_style={header_style}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_pip_formula}\n                                            alt={localize('stop loss pip formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_pip_formula_mobile}\n                                            alt={localize('stop loss pip formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText size=\"14px\">\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    {localize(\n                                                        'The point value is derived from the current digits of the asset. In this example, the digit is 5, so the point value is 0.00001.',\n                                                    )}\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"Your position is automatically closed when your stop loss level is at <0>1.1750</0> and when your stop loss pip value is <0>24 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                {\n                                    <StyledLinkButton\n                                        secondary=\"true\"\n                                        type=\"mt5\"\n                                        external=\"true\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to DMT5 dashboard')}\n                                    </StyledLinkButton>\n                                }\n                            </LinkWrapper>\n                        </RightContent>\n                    ) : (\n                        <RightContent key={tab}>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize(\n                                    'How to calculate stop loss and/or take profit level and pip value',\n                                )}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level and pip value when selling a contract on Deriv MetaTrader 5 (DMT5) is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level = asset price - {stop loss OR take profit amount ÷ (volume × contract size)}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit pip value = |(stop loss OR take profit level - asset price)| ÷ point value</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level helps you to manage your risk when you are selling a contract.',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'For financial accounts, the stop loss and/or take profit pip value is in the quote currency for forex pairs.',\n                                )}\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'For synthetic accounts, the stop loss and/or take profit pip value is in USD.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('Example calculation')}\n                            </Header>\n                            <Text mb=\"16px\">\n                                {localize(\n                                    'Let’s say you want to calculate the take profit level and pip value when you want to sell 3 lots of Volatility 50 Index priced at 249.5961 USD with a take profit amount of 84 USD.',\n                                )}\n                            </Text>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Take profit level')}\n                                    header_style={header_style}\n                                    style={{\n                                        padding: '0 0 24px 0',\n                                    }}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_formula}\n                                            alt={localize('take profit level formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_formula_mobile}\n                                            alt={localize('take profit level formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText size=\"14px\">\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The contract size is one standard lot of Volatility 50 Index = 1.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Take profit pip value')}\n                                    header_style={header_style}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_pip_formula}\n                                            alt={localize('take profit pip formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_pip_formula_mobile}\n                                            alt={localize('take profit pip formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText size=\"14px\">\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    {localize(\n                                                        'The point value is derived from the current digits of the asset. In this example, the digit is 4, so the point value is 0.0001.',\n                                                    )}\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"Your position is automatically closed when your take profit level is at <0>221.5961</0> and the pip value is <0>280,000 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                {\n                                    <StyledLinkButton\n                                        secondary=\"true\"\n                                        type=\"mt5\"\n                                        external=\"true\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to DMT5 dashboard')}\n                                    </StyledLinkButton>\n                                }\n                            </LinkWrapper>\n                        </RightContent>\n                    )}\n                </ContentContainer>\n            </StyledSection>\n        </>\n    )\n}\n\nexport default PnlMarginCalculator\n","import React from 'react'\nimport { Hero, StyledHeader } from '../common/_style'\nimport PnLMarginCalculatorSection from './_pnl-for-margin'\nimport { Container, SEO } from 'components/containers'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\n\nconst PnLMarginCalculator = () => {\n    return (\n        <Layout>\n            <SEO\n                title={localize('PnL Margin Calculator')}\n                description={localize('PnL Margin Calculator')}\n            />\n            <Hero jc=\"center\" ai=\"center\">\n                <Container>\n                    <StyledHeader as=\"h1\" type=\"display-title\" color=\"white\" align=\"center\">\n                        {localize('Stop loss and/or take profit calculator for margin')}\n                    </StyledHeader>\n                </Container>\n            </Hero>\n            <PnLMarginCalculatorSection />\n        </Layout>\n    )\n}\nexport default WithIntl()(PnLMarginCalculator)\n","import React from 'react'\nimport {\n    AAL,\n    AAPL,\n    ABNB,\n    ADS,\n    AIG,\n    AMZN,\n    AUDCAD,\n    AUDCHF,\n    AUDINDEX,\n    AUDJPY,\n    AUDNZD,\n    AUDUSD,\n    AUS200,\n    BA,\n    BABA,\n    BAC,\n    BAY,\n    BCHUSD,\n    BIIB,\n    BMW,\n    BOOM1000,\n    BOOM500,\n    BTCUSD,\n    C,\n    CADCHF,\n    CADJPY,\n    CHFJPY,\n    CLBRENT,\n    CRASH1000,\n    CRASH500,\n    CRM,\n    CSCO,\n    DAL,\n    DAX30,\n    DBK,\n    DIS,\n    DSHUSD,\n    EBAY,\n    EOSUSD,\n    ESP35,\n    EUR50,\n    EURCAD,\n    EURCHF,\n    EURGBP,\n    EURINDEX,\n    EURJPY,\n    EURNZD,\n    EURUSD,\n    FB,\n    FDX,\n    FRA40,\n    GBPAUD,\n    GBPCAD,\n    GBPCHF,\n    GBPINDEX,\n    GBPJPY,\n    GBPNZD,\n    GBPUSD,\n    GM,\n    GOLDUSD,\n    GOOGL,\n    GS,\n    HFVOL10,\n    HFVOL100,\n    HFVOL50,\n    HPQ,\n    IBM,\n    INDEX10,\n    INDEX100,\n    INDEX100S1,\n    INDEX10S1,\n    INDEX25,\n    INDEX25S1,\n    INDEX50,\n    INDEX50S1,\n    INDEX75,\n    INDEX75S1,\n    INTC,\n    JNJ,\n    JP225,\n    JPM,\n    KO,\n    LTCUSD,\n    MA,\n    MCD,\n    MRNA,\n    MSFT,\n    NED25,\n    NFLX,\n    NKE,\n    NVDA,\n    NZDCAD,\n    NZDJPY,\n    NZDUSD,\n    OILUSD,\n    PALLADIUMUSD,\n    PFE,\n    PG,\n    PLATINUMUSD,\n    PYPL,\n    RANGEBREAK100,\n    RANGEBREAK200,\n    SILVERUSD,\n    STEPINDICES,\n    TEVA,\n    TSLA,\n    TWTR,\n    UBER,\n    UK100,\n    US100,\n    US30,\n    US500,\n    USDCAD,\n    USDCHF,\n    USDINDEX,\n    USDJPY,\n    USDZAR,\n    V,\n    WMT,\n    XRPUSD,\n    ZM,\n} from 'components/elements/symbols.js'\n\nexport const optionItemDefault = {\n    name: 'default',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const optionLeverageDefault = {\n    name: 'value',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const leverageItemLists = [\n    { name: 4000, display_name: 4000, key: '1', icon: '' },\n    { name: 3500, display_name: 3500, key: '2', icon: '' },\n    { name: 3000, display_name: 3000, key: '3', icon: '' },\n    { name: 2500, display_name: 2500, key: '4', icon: '' },\n    { name: 2000, display_name: 2000, key: '5', icon: '' },\n    { name: 1500, display_name: 1500, key: '6', icon: '' },\n    { name: 1000, display_name: 1000, key: '7', icon: '' },\n    { name: 900, display_name: 900, key: '8', icon: '' },\n    { name: 800, display_name: 800, key: '9', icon: '' },\n    { name: 700, display_name: 700, key: '10', icon: '' },\n    { name: 600, display_name: 600, key: '11', icon: '' },\n    { name: 500, display_name: 500, key: '12', icon: '' },\n    { name: 400, display_name: 400, key: '13', icon: '' },\n    { name: 200, display_name: 200, key: '14', icon: '' },\n    { name: 100, display_name: 100, key: '15', icon: '' },\n    { name: 50, display_name: 50, key: '16', icon: '' },\n    { name: 30, display_name: 30, key: '17', icon: '' },\n    { name: 5, display_name: 5, key: '18', icon: '' },\n]\n\nexport const syntheticItemLists = [\n    {\n        name: 'Boom 1000 Index',\n        display_name: 'Boom 1000 Index',\n        icon: <img src={BOOM1000} alt=\"boom 100\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Boom 500 Index',\n        display_name: 'Boom 500 Index',\n        icon: <img src={BOOM500} alt=\"boom 500\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Crash 1000 Index',\n        display_name: 'Crash 1000 Index',\n        icon: <img src={CRASH1000} alt=\"crash 1000\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Crash 500 Index',\n        display_name: 'Crash 500 Index',\n        icon: <img src={CRASH500} alt=\"crash 500\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Range Break 100 Index',\n        display_name: 'Range Break 100 Index',\n        icon: <img src={RANGEBREAK100} alt=\"\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Range Break 200 Index',\n        display_name: 'Range Break 200 Index',\n        icon: <img src={RANGEBREAK200} alt=\"range break 200\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Step Index',\n        display_name: 'Step Index',\n        icon: <img src={STEPINDICES} alt=\"step index\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'HF Volatility 10 Index',\n        display_name: 'HF Volatility 10 Index',\n        icon: <img src={HFVOL10} alt=\"hf vol 10\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'HF Volatility 50 Index',\n        display_name: 'HF Volatility 50 Index',\n        icon: <img src={HFVOL50} alt=\"hf vol 50\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'HF Volatility 100 Index',\n        display_name: 'HF Volatility 100 Index',\n        icon: <img src={HFVOL100} alt=\"hf vol 100\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 10 (1s) Index',\n        display_name: 'Volatility 10 (1s) Index',\n        icon: <img src={INDEX10S1} alt=\"vol 10 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 10 Index',\n        display_name: 'Volatility 10 Index',\n        icon: <img src={INDEX10} alt=\"vol 10\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 25 (1s) Index',\n        display_name: 'Volatility 25 (1s) Index',\n        icon: <img src={INDEX25S1} alt=\"vol 25 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 25 Index',\n        display_name: 'Volatility 25 Index',\n        icon: <img src={INDEX25} alt=\"\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 50 (1s) Index',\n        display_name: 'Volatility 50 (1s) Index',\n        icon: <img src={INDEX50S1} alt=\"vol 50 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 50 Index',\n        display_name: 'Volatility 50 Index',\n        icon: <img src={INDEX50} alt=\"vol 50\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 75 (1s) Index',\n        display_name: 'Volatility 75 (1s) Index',\n        icon: <img src={INDEX75S1} alt=\"vol 75 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 75 Index',\n        display_name: 'Volatility 75 Index',\n        icon: <img src={INDEX75} alt=\"vol 75\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 100 (1s) Index',\n        display_name: 'Volatility 100 (1s) Index',\n        icon: <img src={INDEX100S1} alt=\"vol 100 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 100 Index',\n        display_name: 'Volatility 100 Index',\n        icon: <img src={INDEX100} alt=\"vol 100\" />,\n        market: 'synthetic_indices',\n    },\n]\n\nexport const financialItemLists = [\n    {\n        name: 'AAL',\n        display_name: 'American Airlines Group Inc',\n        icon: <img src={AAL} alt=\"american airlines group inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'AAPL',\n        display_name: 'Apple',\n        icon: <img src={AAPL} alt=\"apple\" />,\n        market: 'other',\n    },\n    {\n        name: 'ABNB',\n        display_name: 'Airbnb',\n        icon: <img src={ABNB} alt=\"airbnb\" />,\n        market: 'other',\n    },\n    {\n        name: 'ADS',\n        display_name: 'Adidas Salomon',\n        icon: <img src={ADS} alt=\"adidas salomon\" />,\n        market: 'other',\n    },\n    {\n        name: 'AIG',\n        display_name: 'American International Group',\n        icon: <img src={AIG} alt=\"american international group\" />,\n        market: 'other',\n    },\n    {\n        name: 'AMZN',\n        display_name: 'Amazon.com Inc',\n        icon: <img src={AMZN} alt=\"amazon.com inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'BA',\n        display_name: 'Boeing',\n        icon: <img src={BA} alt=\"boeing\" />,\n        market: 'other',\n    },\n    {\n        name: 'BABA',\n        display_name: 'Alibaba Group Holding Ltd',\n        icon: <img src={BABA} alt=\"alibaba group holding ltd\" />,\n        market: 'other',\n    },\n    {\n        name: 'BAC',\n        display_name: 'Bank of America',\n        icon: <img src={BAC} alt=\"bank of america\" />,\n        market: 'other',\n    },\n    {\n        name: 'BAY',\n        display_name: 'Bayer AG',\n        icon: <img src={BAY} alt=\"bayer ag\" />,\n        market: 'other',\n    },\n    {\n        name: 'BIIB',\n        display_name: 'Biogen Inc.',\n        icon: <img src={BIIB} alt=\"biogen inc.\" />,\n        market: 'other',\n    },\n    {\n        name: 'BMW',\n        display_name: 'BMW',\n        icon: <img src={BMW} alt=\"bmw\" />,\n        market: 'other',\n    },\n    {\n        name: 'C',\n        display_name: 'Citigroup',\n        icon: <img src={C} alt=\"citigroup\" />,\n        market: 'other',\n    },\n    {\n        name: 'CRM',\n        display_name: 'Salesforce.com Inc',\n        icon: <img src={CRM} alt=\"salesforce.com inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'CSCO',\n        display_name: 'Cisco Systems',\n        icon: <img src={CSCO} alt=\"cisco systems\" />,\n        market: 'other',\n    },\n    {\n        name: 'DAL',\n        display_name: 'Delta Air Lines',\n        icon: <img src={DAL} alt=\"delta air lines\" />,\n        market: 'other',\n    },\n    {\n        name: 'DBK',\n        display_name: 'Deutsche Bank AG',\n        icon: <img src={DBK} alt=\"deutsche bank ag\" />,\n        market: 'other',\n    },\n    {\n        name: 'DIS',\n        display_name: 'Walt Disney Company',\n        icon: <img src={DIS} alt=\"walt disney company\" />,\n        market: 'other',\n    },\n    {\n        name: 'EBAY',\n        display_name: 'eBay Inc',\n        icon: <img src={EBAY} alt=\"ebay inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'FB',\n        display_name: 'Facebook Inc',\n        icon: <img src={FB} alt=\"facebook inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'FDX',\n        display_name: 'Fedex',\n        icon: <img src={FDX} alt=\"fedex\" />,\n        market: 'other',\n    },\n    {\n        name: 'GM',\n        display_name: 'General Motors Company',\n        icon: <img src={GM} alt=\"general motors company\" />,\n        market: 'other',\n    },\n    {\n        name: 'GOOGL',\n        display_name: 'Alphabet Inc Class C',\n        icon: <img src={GOOGL} alt=\"alphabet inc class c\" />,\n        market: 'other',\n    },\n    {\n        name: 'GS',\n        display_name: 'Goldman Sachs Group',\n        icon: <img src={GS} alt=\"goldman sachs group\" />,\n        market: 'other',\n    },\n    {\n        name: 'HPQ',\n        display_name: 'HP Inc',\n        icon: <img src={HPQ} alt=\"hp inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'IBM',\n        display_name: 'IBM',\n        icon: <img src={IBM} alt=\"ibm\" />,\n        market: 'other',\n    },\n    {\n        name: 'INTC',\n        display_name: 'Intel',\n        icon: <img src={INTC} alt=\"intel\" />,\n        market: 'other',\n    },\n    {\n        name: 'JNJ',\n        display_name: 'Jonhson & Johnson',\n        icon: <img src={JNJ} alt=\"jonhson and johnson\" />,\n        market: 'other',\n    },\n    {\n        name: 'JPM',\n        display_name: 'JP Morgan Chase',\n        icon: <img src={JPM} alt=\"jp morgan chase\" />,\n        market: 'other',\n    },\n    {\n        name: 'KO',\n        display_name: 'Coca-Cola',\n        icon: <img src={KO} alt=\"coca-cola\" />,\n        market: 'other',\n    },\n    {\n        name: 'MA',\n        display_name: 'Mastercard Inc',\n        icon: <img src={MA} alt=\"mastercard inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'MCD',\n        display_name: 'McDonalds',\n        icon: <img src={MCD} alt=\"McDonalds\" />,\n        market: 'other',\n    },\n    {\n        name: 'MRNA',\n        display_name: 'Moderna Inc',\n        icon: <img src={MRNA} alt=\"moderna inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'MSFT',\n        display_name: 'Microsoft Corporation',\n        icon: <img src={MSFT} alt=\"microsoft corporation\" />,\n        market: 'other',\n    },\n    {\n        name: 'NFLX',\n        display_name: 'Netflix Inc',\n        icon: <img src={NFLX} alt=\"netflix inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'NKE',\n        display_name: 'Nike',\n        icon: <img src={NKE} alt=\"nike\" />,\n        market: 'other',\n    },\n    {\n        name: 'NVDA',\n        display_name: 'NVIDIA Corp',\n        icon: <img src={NVDA} alt=\"nvidia corp\" />,\n        market: 'other',\n    },\n    {\n        name: 'PFE',\n        display_name: 'Pfizer',\n        icon: <img src={PFE} alt=\"pfizer\" />,\n        market: 'other',\n    },\n    {\n        name: 'PG',\n        display_name: 'Procter & Gamble',\n        icon: <img src={PG} alt=\"procter and gamble\" />,\n        market: 'other',\n    },\n    {\n        name: 'PYPL',\n        display_name: 'Paypal',\n        icon: <img src={PYPL} alt=\"paypal\" />,\n        market: 'other',\n    },\n    {\n        name: 'TEVA',\n        display_name: 'Teva Pharmaceutical Inds',\n        icon: <img src={TEVA} alt=\"teva pharmaceutical inds\" />,\n        market: 'other',\n    },\n    {\n        name: 'TSLA',\n        display_name: 'Tesla Inc',\n        icon: <img src={TSLA} alt=\"tesla inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'TWTR',\n        display_name: 'Twitter',\n        icon: <img src={TWTR} alt=\"twitter\" />,\n        market: 'other',\n    },\n    {\n        name: 'UBER',\n        display_name: 'Uber Technologies Inc',\n        icon: <img src={UBER} alt=\"uber technologies inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'V',\n        display_name: 'Visa',\n        icon: <img src={V} alt=\"visa\" />,\n        market: 'other',\n    },\n    {\n        name: 'WMT',\n        display_name: 'Wal-Mart Stores Inc',\n        icon: <img src={WMT} alt=\"wal-mart stores inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'ZM',\n        display_name: 'Zoom Video Communications Inc',\n        icon: <img src={ZM} alt=\"zoom video communications inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'AUS200',\n        display_name: 'Australia 200',\n        icon: <img src={AUS200} alt=\"australia 200\" />,\n        market: 'other',\n    },\n    {\n        name: 'DAX30',\n        display_name: 'Germany 30',\n        icon: <img src={DAX30} alt=\"germany 30\" />,\n        market: 'other',\n    },\n    {\n        name: 'ESP35',\n        display_name: 'Spain 35',\n        icon: <img src={ESP35} alt=\"spain 35\" />,\n        market: 'other',\n    },\n    {\n        name: 'EUR50',\n        display_name: 'Europe 50',\n        icon: <img src={EUR50} alt=\"europe 50\" />,\n        market: 'other',\n    },\n    {\n        name: 'FRA40',\n        display_name: 'France 40',\n        icon: <img src={FRA40} alt=\"france 40\" />,\n        market: 'other',\n    },\n    {\n        name: 'UK100',\n        display_name: 'UK 100',\n        icon: <img src={UK100} alt=\"uk 100\" />,\n        market: 'other',\n    },\n    {\n        name: 'JP225',\n        display_name: 'Japan 225',\n        icon: <img src={JP225} alt=\"japan 225\" />,\n        market: 'other',\n    },\n    {\n        name: 'NED25',\n        display_name: 'Netherland 25',\n        icon: <img src={NED25} alt=\"netherland 25\" />,\n        market: 'other',\n    },\n    {\n        name: 'US500',\n        display_name: 'US 500',\n        icon: <img src={US500} alt=\"us 500\" />,\n        market: 'other',\n    },\n    {\n        name: 'US100',\n        display_name: 'US 100',\n        icon: <img src={US100} alt=\"us 100\" />,\n        market: 'other',\n    },\n    {\n        name: 'US30',\n        display_name: 'Wall Street 30',\n        icon: <img src={US30} alt=\"wall street 30\" />,\n        market: 'other',\n    },\n    {\n        name: 'CL_BRENT',\n        display_name: 'CL_BRENT',\n        icon: <img src={CLBRENT} alt=\"cl brent\" />,\n        market: 'other',\n    },\n    {\n        name: 'BCHUSD',\n        display_name: 'BCH/USD',\n        icon: <img src={BCHUSD} alt=\"bch usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'BTCUSD',\n        display_name: 'BTC/USD',\n        icon: <img src={BTCUSD} alt=\"btc usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'DSHUSD',\n        display_name: 'DSH/USD',\n        icon: <img src={DSHUSD} alt=\"dsh usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'EOSUSD',\n        display_name: 'EOS/USD',\n        icon: <img src={EOSUSD} alt=\"eos usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'LTCUSD',\n        display_name: 'LTC/USD',\n        icon: <img src={LTCUSD} alt=\"ltc usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'XRPUSD',\n        display_name: 'XRP/USD',\n        icon: <img src={XRPUSD} alt=\"xrp usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'AUDCAD',\n        display_name: 'AUD/CAD',\n        icon: <img src={AUDCAD} alt=\"aud cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDCHF',\n        display_name: 'AUD/CHF',\n        icon: <img src={AUDCHF} alt=\"aud chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDJPY',\n        display_name: 'AUD/JPY',\n        icon: <img src={AUDJPY} alt=\"aud jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDNZD',\n        display_name: 'AUD/NZD',\n        icon: <img src={AUDNZD} alt=\"aud nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDUSD',\n        display_name: 'AUD/USD',\n        icon: <img src={AUDUSD} alt=\"aud usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURCAD',\n        display_name: 'EUR/CAD',\n        icon: <img src={EURCAD} alt=\"eur cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURCHF',\n        display_name: 'EUR/CHF',\n        icon: <img src={EURCHF} alt=\"eur chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURGBP',\n        display_name: 'EUR/GBP',\n        icon: <img src={EURGBP} alt=\"eur gbp\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURJPY',\n        display_name: 'EUR/JPY',\n        icon: <img src={EURJPY} alt=\"eur jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURNZD',\n        display_name: 'EUR/NZD',\n        icon: <img src={EURNZD} alt=\"eur nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURUSD',\n        display_name: 'EUR/USD',\n        icon: <img src={EURUSD} alt=\"eur usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPCHF',\n        display_name: 'GBP/CHF',\n        icon: <img src={GBPCHF} alt=\"gbp chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPJPY',\n        display_name: 'GBP/JPY',\n        icon: <img src={GBPJPY} alt=\"gbp jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPUSD',\n        display_name: 'GBP/USD',\n        icon: <img src={GBPUSD} alt=\"gbp usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDUSD',\n        display_name: 'NZD/USD',\n        icon: <img src={NZDUSD} alt=\"nzd usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDCAD',\n        display_name: 'USD/CAD',\n        icon: <img src={USDCAD} alt=\"usd cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDCHF',\n        display_name: 'USD/CHF',\n        icon: <img src={USDCHF} alt=\"usd chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDJPY',\n        display_name: 'USD/JPY',\n        icon: <img src={USDJPY} alt=\"usd jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CADCHF',\n        display_name: 'CAD/CHF',\n        icon: <img src={CADCHF} alt=\"cad chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CADJPY',\n        display_name: 'CAD/JPY',\n        icon: <img src={CADJPY} alt=\"cad jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPAUD',\n        display_name: 'GBP/AUD',\n        icon: <img src={GBPAUD} alt=\"gbp aud\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPCAD',\n        display_name: 'GBP/CAD',\n        icon: <img src={GBPCAD} alt=\"gbp cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPNZD',\n        display_name: 'GBP/NZD',\n        icon: <img src={GBPNZD} alt=\"gbp nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDCAD',\n        display_name: 'NZD/CAD',\n        icon: <img src={NZDCAD} alt=\"nzd cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDJPY',\n        display_name: 'NZD/JPY',\n        icon: <img src={NZDJPY} alt=\"nzd jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDZAR',\n        display_name: 'USD/ZAR',\n        icon: <img src={USDZAR} alt=\"usd zar\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CHFJPY',\n        display_name: 'CHF/JPY',\n        icon: <img src={CHFJPY} alt=\"chf  jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'WTI_OIL',\n        display_name: 'Oil/USD',\n        icon: <img src={OILUSD} alt=\"oil usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XAUUSD',\n        display_name: 'Gold/USD',\n        icon: <img src={GOLDUSD} alt=\"gold usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XAGUSD',\n        display_name: 'Silver/USD',\n        icon: <img src={SILVERUSD} alt=\"silver usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XPDUSD',\n        display_name: 'Palladium/USD',\n        icon: <img src={PALLADIUMUSD} alt=\"palladium usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XPTUSD',\n        display_name: 'Platinum/USD',\n        icon: <img src={PLATINUMUSD} alt=\"platinum usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'AUDINDEX',\n        display_name: 'AUD Index',\n        icon: <img src={AUDINDEX} alt=\"aud index\" />,\n        market: 'smartfx',\n    },\n    {\n        name: 'GBPINDEX',\n        display_name: 'GBP Index',\n        icon: <img src={GBPINDEX} alt=\"gbp index\" />,\n        market: 'smartfx',\n    },\n    {\n        name: 'EURINDEX',\n        display_name: 'EUR Index',\n        icon: <img src={EURINDEX} alt=\"eur index\" />,\n        market: 'smartfx',\n    },\n    {\n        name: 'USDINDEX',\n        display_name: 'USD Index',\n        icon: <img src={USDINDEX} alt=\"usd index\" />,\n        market: 'smartfx',\n    },\n    {\n        name: 'GOLDINDEX',\n        display_name: 'Gold Index',\n        icon: <img src={GOLDUSD} alt=\"gold index\" />,\n        market: 'smartfx',\n    },\n]\n"],"sourceRoot":""}