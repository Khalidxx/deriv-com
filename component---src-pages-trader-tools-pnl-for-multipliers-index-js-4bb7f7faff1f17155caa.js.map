{"version":3,"sources":["webpack:///./src/pages/trader-tools/pnl-for-multipliers/_pnl-for-multipliers.js","webpack:///./src/pages/trader-tools/pnl-for-multipliers/index.js"],"names":["PnlMultipliersCalculator","data","useStaticQuery","useState","tab","setTab","sub_tab","setSubTab","onTabClick","onSubTabClick","jc","ai","to","color","localize","src","RightArrow","alt","height","width","style","margin","direction","as","type","align","weight","mt","mb","tablet","active","onClick","size","enableReinitialize","initialValues","pnlMarginSymbol","stopLossLevelOutput","takeProfitLevelOutput","takeProfitAmount","stopLossAmount","assetPrice","commission","stake","multiplier","validate","resetValidationPnlMultipliersLevel","onSubmit","values","setFieldValue","getPnlMultiplierCommon","numberSubmitFormat","handleBlur","errors","touched","setFieldError","setFieldTouched","isValid","dirty","Desktop","max_width","fd","mr","htmlFor","numberWithCommas","disabled","name","value","onChange","field","id","label","autoComplete","error","onBlur","data-lpignore","handleError","current_input","focus","maxLength","background","secondary","Mobile","min_width","translate_text","components","key","has_single_state","header","header_style","item_style","plus","stop_loss_level_up_formula","stop_loss_level_up_formula_mobile","take_profit_level_down_formula","take_profit_level_down_formula_mobile","is_deriv_app_link","external","target","rel","stopLossAmountOutput","takeProfitAmountOutput","takeProfitLevel","stopLossLevel","resetValidationPnlMultipliersAmount","take_profit_amount_up_formula","take_profit_amount_up_formula_mobile","stop_loss_amount_down_formula","stop_loss_amount_down_formula_mobile","WithIntl","title","description"],"mappings":"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","file":"component---src-pages-trader-tools-pnl-for-multipliers-index-js-4bb7f7faff1f17155caa.js","sourcesContent":["import React, { useState } from 'react'\nimport { Field, Formik } from 'formik'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport {\n    getPnlMultiplierCommon,\n    numberSubmitFormat,\n    numberWithCommas,\n    resetValidationPnlMultipliersAmount,\n    resetValidationPnlMultipliersLevel,\n} from '../common/_utility'\nimport {\n    BreadCrumbContainer,\n    CalculateButton,\n    CalculatorBody,\n    CalculatorForm,\n    CalculatorHeader,\n    CalculatorLabel,\n    ContentContainer,\n    FormulaText,\n    FormWrapper,\n    header_style,\n    InputGroup,\n    item_style,\n    LinkWrapper,\n    PnLCalculatorOutputContainer,\n    PnLCalculatorOutputField,\n    PnLCalculatorOutputSymbol,\n    PnlCalculatorTabItem,\n    PnLInputGroup,\n    RightContent,\n    SectionSubtitle,\n    StyledLinkButton,\n    StyledOl,\n    StyledSection,\n    SwapTabSelector,\n} from '../common/_style'\nimport { localize, Localize } from 'components/localization'\nimport {\n    Accordion,\n    AccordionItem,\n    Header,\n    LocalizedLinkText,\n    QueryImage,\n    Text,\n} from 'components/elements'\nimport { Flex, Show } from 'components/containers'\nimport Input from 'components/form/input'\nimport RightArrow from 'images/svg/black-right-arrow.svg'\n\nconst PnlMultipliersCalculator = () => {\n    const query = graphql`\n        query {\n            stop_loss_level_up_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-up-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_level_up_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-up-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_amount_down_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-amount-down-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_amount_down_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-amount-down-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_down_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-down-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_down_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-down-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_amount_up_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-amount-up-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_amount_up_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-amount-up-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n        }\n    `\n    const data = useStaticQuery(query)\n\n    const [tab, setTab] = useState('Level')\n    const [sub_tab, setSubTab] = useState('Up')\n\n    const onTabClick = (tab) => setTab(tab)\n    const onSubTabClick = (tab) => setSubTab(tab)\n\n    return (\n        <>\n            <BreadCrumbContainer>\n                <Flex jc=\"flex-start\" ai=\"center\">\n                    <LocalizedLinkText to=\"/trader-tools\" color=\"grey-5\">\n                        {localize(\"Traders' tools\")}\n                    </LocalizedLinkText>\n                    <img\n                        src={RightArrow}\n                        alt={localize('right arrow')}\n                        height=\"16\"\n                        width=\"16\"\n                        style={{ margin: '0 8px' }}\n                    />\n                    <Text>{localize('PnL for multipliers')}</Text>\n                </Flex>\n            </BreadCrumbContainer>\n            <StyledSection direction=\"column\">\n                <SectionSubtitle as=\"h3\" type=\"sub-section-title\" align=\"center\" weight=\"normal\">\n                    {localize(\n                        'Our profit and loss calculator for multipliers helps to determine the stop loss and/or take profit level in your trades to minimise losses and maximise gains.',\n                    )}\n                </SectionSubtitle>\n\n                <Flex mt=\"80px\" mb=\"40px\" tablet={{ mt: '40px', mb: '24px' }}>\n                    <SwapTabSelector active={tab === 'Level'} onClick={() => onTabClick('Level')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Level')}\n                        </Text>\n                    </SwapTabSelector>\n                    <SwapTabSelector active={tab === 'Amount'} onClick={() => onTabClick('Amount')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Amount')}\n                        </Text>\n                    </SwapTabSelector>\n                </Flex>\n\n                {tab === 'Level' ? (\n                    <ContentContainer mb=\"4.0rem\">\n                        <FormWrapper>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    direction: 'Up',\n                                    pnlMarginSymbol: 'USD',\n                                    stopLossLevelOutput: 0,\n                                    takeProfitLevelOutput: 0,\n                                    takeProfitAmount: '',\n                                    stopLossAmount: '',\n                                    assetPrice: '',\n                                    commission: '',\n                                    stake: '',\n                                    multiplier: '',\n                                }}\n                                validate={resetValidationPnlMultipliersLevel}\n                                onSubmit={(values, { setFieldValue }) => {\n                                    setFieldValue(\n                                        'takeProfitLevelOutput',\n                                        sub_tab === 'Up'\n                                            ? getPnlMultiplierCommon(values, 'getTakeProfitLevelUp')\n                                            : getPnlMultiplierCommon(\n                                                  values,\n                                                  'getTakeProfitLevelDown',\n                                              ),\n                                    )\n                                    setFieldValue(\n                                        'stopLossLevelOutput',\n                                        sub_tab === 'Up'\n                                            ? getPnlMultiplierCommon(values, 'getStopLossLevelUp')\n                                            : getPnlMultiplierCommon(\n                                                  values,\n                                                  'getStopLossLevelDown',\n                                              ),\n                                    )\n                                    setFieldValue(\n                                        'assetPrice',\n                                        numberSubmitFormat(values.assetPrice),\n                                    )\n                                    setFieldValue(\n                                        'commission',\n                                        numberSubmitFormat(values.commission),\n                                    )\n                                    setFieldValue('stake', numberSubmitFormat(values.stake))\n                                    setFieldValue(\n                                        'multiplier',\n                                        numberSubmitFormat(values.multiplier),\n                                    )\n                                    setFieldValue(\n                                        'takeProfitAmount',\n                                        numberSubmitFormat(values.takeProfitAmount),\n                                    )\n                                    setFieldValue(\n                                        'stopLossAmount',\n                                        numberSubmitFormat(values.stopLossAmount),\n                                    )\n                                }}\n                            >\n                                {({\n                                    values,\n                                    setFieldValue,\n                                    handleBlur,\n                                    errors,\n                                    touched,\n                                    setFieldError,\n                                    setFieldTouched,\n                                    isValid,\n                                    dirty,\n                                }) => (\n                                    <>\n                                        <Show.Desktop max_width=\"mobileL\">\n                                            <CalculatorForm>\n                                                <CalculatorHeader>\n                                                    <Flex>\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.takeProfitLevelOutput,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.stopLossLevelOutput,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n                                                </CalculatorHeader>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Direction')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Up'}\n                                                            onClick={() => {\n                                                                onSubTabClick('Up')\n                                                                setFieldValue('direction', 'Up')\n                                                            }}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Up')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Down'}\n                                                            disabled={sub_tab === 'Down'}\n                                                            onClick={() => {\n                                                                onSubTabClick('Down')\n                                                                setFieldValue('direction', 'Down')\n                                                            }}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Down')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <Flex jc=\"space-between\" mb=\"17px\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"assetPrice\"\n                                                                    value={values.assetPrice}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'assetPrice',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"assetPrice\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Asset price',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.assetPrice &&\n                                                                                errors.assetPrice\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'assetPrice',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'assetPrice',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'assetPrice',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"8\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"commission\"\n                                                                    value={values.commission}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'commission',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"commission\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Commission',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.commission &&\n                                                                                errors.commission\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'commission',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'commission',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'commission',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"8\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\" mb=\"17px\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"stake\"\n                                                                    value={values.stake}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'stake',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"stake\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Stake',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.stake &&\n                                                                                errors.stake\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'stake',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'stake',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'stake',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"15\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"takeProfitAmount\"\n                                                                    value={values.takeProfitAmount}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'takeProfitAmount',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"takeProfitAmount\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Take profit amount',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.takeProfitAmount &&\n                                                                                errors.takeProfitAmount\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'takeProfitAmount',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'takeProfitAmount',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'takeProfitAmount',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"15\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"multiplier\"\n                                                                    value={values.multiplier}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'multiplier',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"multiplier\"\n                                                                            type=\"text\"\n                                                                            value={\n                                                                                values.multiplier\n                                                                            }\n                                                                            label={localize(\n                                                                                'Multiplier',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.multiplier &&\n                                                                                errors.multiplier\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'multiplier',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'multiplier',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'multiplier',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"4\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"stopLossAmount\"\n                                                                    value={values.stopLossAmount}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'stopLossAmount',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"stopLossAmount\"\n                                                                            type=\"text\"\n                                                                            value={\n                                                                                values.stopLossAmount\n                                                                            }\n                                                                            label={localize(\n                                                                                'Stop loss amount',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.stopLossAmount &&\n                                                                                errors.stopLossAmount\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'stopLossAmount',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'stopLossAmount',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'stopLossAmount',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"15\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </CalculatorForm>\n                                        </Show.Desktop>\n\n                                        <Show.Mobile min_width=\"mobileL\">\n                                            <CalculatorForm>\n                                                <CalculatorHeader>\n                                                    <Flex fd=\"column\">\n                                                        <Flex fd=\"column\" mb=\"16px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.takeProfitLevelOutput,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.stopLossLevelOutput,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n                                                </CalculatorHeader>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Direction')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Up'}\n                                                            onClick={() => {\n                                                                onSubTabClick('Up')\n                                                            }}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Up')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Down'}\n                                                            disabled={sub_tab === 'Down'}\n                                                            onClick={() => {\n                                                                onSubTabClick('Down')\n                                                                setFieldValue('direction', 'Down')\n                                                            }}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Down')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"assetPrice\"\n                                                            value={values.assetPrice}\n                                                            onChange={(value) => {\n                                                                setFieldValue('assetPrice', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"assetPrice\"\n                                                                    type=\"text\"\n                                                                    label={localize('Asset Price')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.assetPrice &&\n                                                                        errors.assetPrice\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'assetPrice',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'assetPrice',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'assetPrice',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"8\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"stake\"\n                                                            value={values.stake}\n                                                            onChange={(value) => {\n                                                                setFieldValue('stake', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"stake\"\n                                                                    type=\"text\"\n                                                                    value={values.stake}\n                                                                    label={localize('Stake')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.stake &&\n                                                                        errors.stake\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'stake',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError('stake', '')\n                                                                        setFieldTouched(\n                                                                            'stake',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"15\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"multiplier\"\n                                                            value={values.multiplier}\n                                                            onChange={(value) => {\n                                                                setFieldValue('multiplier', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"multiplier\"\n                                                                    type=\"text\"\n                                                                    label={localize('Multiplier')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.multiplier &&\n                                                                        errors.multiplier\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'multiplier',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'multiplier',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'multiplier',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"4\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"commission\"\n                                                            value={values.commission}\n                                                            onChange={(value) => {\n                                                                setFieldValue('commission', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"commission\"\n                                                                    type=\"text\"\n                                                                    label={localize('Commission')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.commission &&\n                                                                        errors.commission\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'commission',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'commission',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'commission',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"8\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"takeProfitAmount\"\n                                                            value={values.takeProfitAmount}\n                                                            onChange={(value) => {\n                                                                setFieldValue(\n                                                                    'takeProfitAmount',\n                                                                    value,\n                                                                )\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"takeProfitAmount\"\n                                                                    type=\"text\"\n                                                                    value={values.takeProfitAmount}\n                                                                    label={localize(\n                                                                        'Take profit amount',\n                                                                    )}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.takeProfitAmount &&\n                                                                        errors.takeProfitAmount\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'takeProfitAmount',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'takeProfitAmount',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'takeProfitAmount',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"15\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"stopLossAmount\"\n                                                            value={values.stopLossAmount}\n                                                            onChange={(value) => {\n                                                                setFieldValue(\n                                                                    'stopLossAmount',\n                                                                    value,\n                                                                )\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"stopLossAmount\"\n                                                                    type=\"text\"\n                                                                    value={values.stopLossAmount}\n                                                                    label={localize(\n                                                                        'Stop loss amount',\n                                                                    )}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.stopLossAmount &&\n                                                                        errors.stopLossAmount\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'stopLossAmount',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'stopLossAmount',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'stopLossAmount',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"15\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </CalculatorForm>\n                                        </Show.Mobile>\n                                    </>\n                                )}\n                            </Formik>\n                        </FormWrapper>\n\n                        <RightContent>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('How to calculate stop loss and/or take profit level')}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level for a contract on DTrader is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level in the Up direction = asset price × {(stop loss OR take profit amount + commission) ÷ (stake × multiplier) + 1}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level in the Down direction = asset price × {(-stop loss OR take profit amount - commission) ÷ (stake × multiplier) + 1}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'This helps you to set the stop loss and/or take profit level when the asset price moves in Up or Down direction.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"16px\">\n                                {localize('Example calculation')}\n                            </Header>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Stop loss level in Up direction')}\n                                    header_style={header_style}\n                                    style={item_style}\n                                    plus\n                                >\n                                    <Text mb=\"16px\">\n                                        {localize(\n                                            'Let’s say you want to calculate the stop loss level when you open a position for Volatility 100 Index priced at 3376.24 USD with a stake amount of 10 USD, a multiplier value of x100, and a stop loss amount of 7.54 USD in Up direction.',\n                                        )}\n                                    </Text>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_up_formula}\n                                            alt={localize('stop loss level up formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_up_formula_mobile}\n                                            alt={localize('stop loss level up formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText size=\"14px\">\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The commission is automatically calculated based on your stake, symbol, and the multiplier you choose. Its value is directly available on DTrader.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mb=\"1.6rem\" mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"So in this scenario, you would set your stop loss level at <0>3351.46</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Take profit level in Down direction')}\n                                    header_style={header_style}\n                                    style={item_style}\n                                    plus\n                                >\n                                    <Text mb=\"16px\">\n                                        {localize(\n                                            'Let’s say you want to calculate the take profit level when you open a position for Volatility 100 Index priced at 3376.24 USD with a stake amount of 10 USD, a multiplier value of x100, and a take profit amount of 7.54 USD in Down direction.',\n                                        )}\n                                    </Text>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_down_formula}\n                                            alt={localize('take profit level down formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_down_formula_mobile}\n                                            alt={localize('take profit level down formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText size=\"14px\">\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The commission is automatically calculated based on your stake, symbol, and the multiplier you choose. Its value is directly available on DTrader.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"So in this scenario, you would set your take profit level at <0>3350.11</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                <StyledLinkButton\n                                    secondary=\"true\"\n                                    is_deriv_app_link\n                                    to=\"/\"\n                                    external=\"true\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {localize('Go to Dtrader')}\n                                </StyledLinkButton>\n                            </LinkWrapper>\n                        </RightContent>\n                    </ContentContainer>\n                ) : (\n                    <ContentContainer key={tab} mb=\"4.0rem\">\n                        <FormWrapper>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    direction: 'Up',\n                                    pnlMarginSymbol: 'USD',\n                                    stopLossAmountOutput: 0,\n                                    takeProfitAmountOutput: 0,\n                                    takeProfitLevel: '',\n                                    stopLossLevel: '',\n                                    assetPrice: '',\n                                    commission: '',\n                                    stake: '',\n                                    multiplier: '',\n                                }}\n                                validate={resetValidationPnlMultipliersAmount}\n                                onSubmit={(values, { setFieldValue }) => {\n                                    setFieldValue(\n                                        'takeProfitAmountOutput',\n                                        sub_tab === 'Up'\n                                            ? getPnlMultiplierCommon(\n                                                  values,\n                                                  'getTakeProfitAmountUp',\n                                              )\n                                            : getPnlMultiplierCommon(\n                                                  values,\n                                                  'getTakeProfitAmountDown',\n                                              ),\n                                    )\n                                    setFieldValue(\n                                        'stopLossAmountOutput',\n                                        sub_tab === 'Up'\n                                            ? getPnlMultiplierCommon(values, 'getStopLossAmountUp')\n                                            : getPnlMultiplierCommon(\n                                                  values,\n                                                  'getStopLossAmountDown',\n                                              ),\n                                    )\n                                    setFieldValue(\n                                        'assetPrice',\n                                        numberSubmitFormat(values.assetPrice),\n                                    )\n                                    setFieldValue(\n                                        'commission',\n                                        numberSubmitFormat(values.commission),\n                                    )\n                                    setFieldValue('stake', numberSubmitFormat(values.stake))\n                                    setFieldValue(\n                                        'multiplier',\n                                        numberSubmitFormat(values.multiplier),\n                                    )\n                                    setFieldValue(\n                                        'takeProfitLevel',\n                                        numberSubmitFormat(values.takeProfitLevel),\n                                    )\n                                    setFieldValue(\n                                        'stopLossLevel',\n                                        numberSubmitFormat(values.stopLossLevel),\n                                    )\n                                }}\n                            >\n                                {({\n                                    values,\n                                    setFieldValue,\n                                    handleBlur,\n                                    errors,\n                                    touched,\n                                    setFieldError,\n                                    setFieldTouched,\n                                    isValid,\n                                    dirty,\n                                }) => (\n                                    <>\n                                        <Show.Desktop max_width=\"mobileL\">\n                                            <CalculatorForm>\n                                                <CalculatorHeader>\n                                                    <Flex>\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit amount')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.takeProfitAmountOutput,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss amount')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.stopLossAmountOutput,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n                                                </CalculatorHeader>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Direction')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Up'}\n                                                            onClick={() => {\n                                                                onSubTabClick('Up')\n                                                                setFieldValue('direction', 'Up')\n                                                            }}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Up')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Down'}\n                                                            disabled={sub_tab === 'Down'}\n                                                            onClick={() => {\n                                                                onSubTabClick('Down')\n                                                                setFieldValue('direction', 'Down')\n                                                            }}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Down')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <Flex jc=\"space-between\" mb=\"17px\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"assetPrice\"\n                                                                    value={values.assetPrice}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'assetPrice',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"assetPrice\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Asset price',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.assetPrice &&\n                                                                                errors.assetPrice\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'assetPrice',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'assetPrice',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'assetPrice',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"8\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"commission\"\n                                                                    value={values.commission}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'commission',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"commission\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Commission',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.commission &&\n                                                                                errors.commission\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'commission',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'commission',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'commission',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"8\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\" mb=\"17px\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"stake\"\n                                                                    value={values.stake}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'stake',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"stake\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Stake',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.stake &&\n                                                                                errors.stake\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'stake',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'stake',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'stake',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"15\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"takeProfitLevel\"\n                                                                    value={values.takeProfitLevel}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'takeProfitLevel',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"takeProfitLevel\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Take profit level',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.takeProfitLevel &&\n                                                                                errors.takeProfitLevel\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'takeProfitLevel',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'takeProfitLevel',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'takeProfitLevel',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"15\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"multiplier\"\n                                                                    value={values.multiplier}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'multiplier',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"multiplier\"\n                                                                            type=\"text\"\n                                                                            value={\n                                                                                values.multiplier\n                                                                            }\n                                                                            label={localize(\n                                                                                'Multiplier',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.multiplier &&\n                                                                                errors.multiplier\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'multiplier',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'multiplier',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'multiplier',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"4\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"stopLossLevel\"\n                                                                    value={values.stopLossLevel}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'stopLossLevel',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"stopLossLevel\"\n                                                                            type=\"text\"\n                                                                            value={\n                                                                                values.stopLossLevel\n                                                                            }\n                                                                            label={localize(\n                                                                                'Stop loss level',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.stopLossLevel &&\n                                                                                errors.stopLossLevel\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'stopLossLevel',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'stopLossLevel',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'stopLossLevel',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength=\"15\"\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </CalculatorForm>\n                                        </Show.Desktop>\n\n                                        <Show.Mobile min_width=\"mobileL\">\n                                            <CalculatorForm>\n                                                <CalculatorHeader>\n                                                    <Flex fd=\"column\">\n                                                        <Flex fd=\"column\" mb=\"16px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit amount')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.takeProfitAmountOutput,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss amount')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {numberWithCommas(\n                                                                        values.stopLossAmountOutput,\n                                                                    )}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n                                                </CalculatorHeader>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Direction')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Up'}\n                                                            onClick={() => {\n                                                                onSubTabClick('Up')\n                                                            }}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Up')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Down'}\n                                                            disabled={sub_tab === 'Down'}\n                                                            onClick={() => {\n                                                                onSubTabClick('Down')\n                                                                setFieldValue('direction', 'Down')\n                                                            }}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Down')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"assetPrice\"\n                                                            value={values.assetPrice}\n                                                            onChange={(value) => {\n                                                                setFieldValue('assetPrice', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"assetPrice\"\n                                                                    type=\"text\"\n                                                                    label={localize('Asset Price')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.assetPrice &&\n                                                                        errors.assetPrice\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'assetPrice',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'assetPrice',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'assetPrice',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"8\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"stake\"\n                                                            value={values.stake}\n                                                            onChange={(value) => {\n                                                                setFieldValue('stake', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"stake\"\n                                                                    type=\"text\"\n                                                                    value={values.stake}\n                                                                    label={localize('Stake')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.stake &&\n                                                                        errors.stake\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'stake',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError('stake', '')\n                                                                        setFieldTouched(\n                                                                            'stake',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"15\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"multiplier\"\n                                                            value={values.multiplier}\n                                                            onChange={(value) => {\n                                                                setFieldValue('multiplier', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"multiplier\"\n                                                                    type=\"text\"\n                                                                    label={localize('Multiplier')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.multiplier &&\n                                                                        errors.multiplier\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'multiplier',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'multiplier',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'multiplier',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"4\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"commission\"\n                                                            value={values.commission}\n                                                            onChange={(value) => {\n                                                                setFieldValue('commission', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"commission\"\n                                                                    type=\"text\"\n                                                                    label={localize('Commission')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.commission &&\n                                                                        errors.commission\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'commission',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'commission',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'commission',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"8\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"takeProfitLevel\"\n                                                            value={values.takeProfitLevel}\n                                                            onChange={(value) => {\n                                                                setFieldValue(\n                                                                    'takeProfitLevel',\n                                                                    value,\n                                                                )\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"takeProfitLevel\"\n                                                                    type=\"text\"\n                                                                    value={values.takeProfitLevel}\n                                                                    label={localize(\n                                                                        'Take profit level',\n                                                                    )}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.takeProfitLevel &&\n                                                                        errors.takeProfitLevel\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'takeProfitLevel',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'takeProfitLevel',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'takeProfitLevel',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"15\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"stopLossLevel\"\n                                                            value={values.stopLossLevel}\n                                                            onChange={(value) => {\n                                                                setFieldValue(\n                                                                    'stopLossLevel',\n                                                                    value,\n                                                                )\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"stopLossLevel\"\n                                                                    type=\"text\"\n                                                                    value={values.stopLossLevel}\n                                                                    label={localize(\n                                                                        'Stop loss level',\n                                                                    )}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.stopLossLevel &&\n                                                                        errors.stopLossLevel\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'stopLossLevel',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError(\n                                                                            'stopLossLevel',\n                                                                            '',\n                                                                        )\n                                                                        setFieldTouched(\n                                                                            'stopLossLevel',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength=\"15\"\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </CalculatorForm>\n                                        </Show.Mobile>\n                                    </>\n                                )}\n                            </Formik>\n                        </FormWrapper>\n\n                        <RightContent>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('How to calculate stop loss and/or take profit amount')}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit amount for a contract on DTrader is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit amount in the Up direction = Max [{stake × ((stop loss OR take profit level - asset price) ÷ asset price × multiplier) - commission}, -stake]</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit amount in the Down direction = Max [{stake × (-(stop loss OR take profit level - asset price) ÷ asset price × multiplier) - commission}, -stake]</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'This helps you to set the stop loss and/or take profit level when the asset price moves in Up or Down direction.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"16px\">\n                                {localize('Example calculation')}\n                            </Header>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Take profit amount in Up direction')}\n                                    header_style={header_style}\n                                    style={item_style}\n                                    plus\n                                >\n                                    <Text mb=\"16px\">\n                                        {localize(\n                                            'Let’s say you want to calculate the take profit amount when you want to open a position for Volatility 100 Index priced at 3376.24 USD with a stake amount of 10 USD, a multiplier value of x100, and a take profit level of 3400 in Up direction.',\n                                        )}\n                                    </Text>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_amount_up_formula}\n                                            alt={localize('take profit amount up formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_amount_up_formula_mobile}\n                                            alt={localize('take profit amount up formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText size=\"14px\">\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The commission is automatically calculated based on your stake, symbol, and the multiplier you choose. Its value is directly available on DTrader.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mb=\"1.6rem\" mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"So in this scenario, you would set your take profit level at <0>6.83 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Stop loss amount in Down direction')}\n                                    header_style={header_style}\n                                    style={item_style}\n                                    plus\n                                >\n                                    <Text mb=\"16px\">\n                                        {localize(\n                                            'Let’s say you want to calculate the stop loss amount when you want to open a position for Volatility 100 Index priced at 3376.24 USD with a stake amount of 10 USD, a multiplier value of x100, and a stop loss level of 3400 in Down direction.',\n                                        )}\n                                    </Text>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_amount_down_formula}\n                                            alt={localize('stop loss amount down formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_amount_down_formula_mobile}\n                                            alt={localize('stop loss amount down formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText size=\"14px\">\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The commission is automatically calculated based on your stake, symbol, and the multiplier you choose. Its value is directly available on DTrader.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"So in this scenario, you would set your stop loss amount at <0>-7.23 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                <StyledLinkButton\n                                    secondary=\"true\"\n                                    is_deriv_app_link\n                                    to=\"/\"\n                                    external=\"true\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {localize('Go to Dtrader')}\n                                </StyledLinkButton>\n                            </LinkWrapper>\n                        </RightContent>\n                    </ContentContainer>\n                )}\n            </StyledSection>\n        </>\n    )\n}\n\nexport default PnlMultipliersCalculator\n","import React from 'react'\nimport { Hero, StyledHeader } from '../common/_style'\nimport PnLMultipliersCalculatorSection from './_pnl-for-multipliers'\nimport { Container, SEO } from 'components/containers'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\n\nconst PnLMultipliersCalculator = () => {\n    return (\n        <Layout>\n            <SEO\n                title={localize('PnL Multipliers Calculator')}\n                description={localize('PnL Multipliers Calculator')}\n            />\n            <Hero jc=\"center\" ai=\"center\">\n                <Container>\n                    <StyledHeader as=\"h1\" type=\"display-title\" color=\"white\" align=\"center\">\n                        {localize('Stop loss and/or take profit calculator for multipliers')}\n                    </StyledHeader>\n                </Container>\n            </Hero>\n            <PnLMultipliersCalculatorSection />\n        </Layout>\n    )\n}\nexport default WithIntl()(PnLMultipliersCalculator)\n"],"sourceRoot":""}